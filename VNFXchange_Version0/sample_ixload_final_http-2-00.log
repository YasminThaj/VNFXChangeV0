
################################################################################
## 06/08/2017 20:21:19: Log Start PID=4292
################################################################################

*Info 06/08 20:21:19.157 Chassis Chain: Validating that 192.168.31.42 has a valid network address.
*Info 06/08 20:21:19.157 Chassis Chain: Chassis 192.168.31.42 has a valid network address.
*Info 06/08 20:21:19.157 Chassis Chain: Validating that 192.168.31.42 accepts incoming connections. Will try to connect for 10 seconds.
*Debug 06/08 20:21:20.161 Chassis Chain: IxLoad encountered the following error when connecting to chassis 192.168.31.42 : No connection could be made because the target machine actively refused it.
*Info 06/08 20:21:20.163 Chassis Chain: Validation for 192.168.31.42 is completed. IP is valid and connection succeeded.
*Info 06/08 20:21:20.163 ixChassis 192.168.31.42: Connecting to chassis 192.168.31.42
*Debug 06/08 20:21:20.165 ixChassis 192.168.31.42: Starting Async Callback
*Debug 06/08 20:21:20.167 ixChassis 192.168.31.42: Blocking for response, this is a wizard, tcl api callback or apply config or start run scenario
*Debug 06/08 20:21:20.990 ixChassis 192.168.31.42: Async callback received -- callbackEstablishConnection
*Debug 06/08 20:21:20.996 ixChassis 192.168.31.42: Chassis 192.168.31.42 installs IxOS 8.10.1250.8 EA-PATCH1
*Debug 06/08 20:21:21.167 ixChassis 192.168.31.42: Blocking for response, this is a wizard, tcl api callback or apply config or start run scenario
*Debug 06/08 20:21:21.595 ixChassis 192.168.31.42: Chassis 192.168.31.42 installs IxOS 8.10.1250.8 EA-PATCH1
*Debug 06/08 20:21:21.667 ixChassis 192.168.31.42: Card = 1, name = Xcellon-Ultra NP, number of ports = 13
*Debug 06/08 20:21:22.121 ixPort Port 1.1.1: port (1,1,1) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.121 ixPort Port 1.1.2: port (1,1,2) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.122 ixPort Port 1.1.3: port (1,1,3) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.124 ixPort Port 1.1.4: port (1,1,4) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.125 ixPort Port 1.1.5: port (1,1,5) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.125 ixPort Port 1.1.6: port (1,1,6) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.127 ixPort Port 1.1.7: port (1,1,7) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.128 ixPort Port 1.1.8: port (1,1,8) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.128 ixPort Port 1.1.9: port (1,1,9) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.130 ixPort Port 1.1.10: port (1,1,10) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.131 ixPort Port 1.1.11: port (1,1,11) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.131 ixPort Port 1.1.12: port (1,1,12) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.132 ixPort Port 1.1.13: port (1,1,13) operationModesMap={0: False, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 06/08 20:21:22.134 ixChassis 192.168.31.42: Card = 2, name = slot empty, number of ports = 0
*Debug 06/08 20:21:22.151 Chassis Chain: Creating chassis watch. Monitoring for event mask 7
*Debug 06/08 20:21:22.167 ixChassis 192.168.31.42: Blocking for response, this is a wizard, tcl api callback or apply config or start run scenario
*Info 06/08 20:21:22.170 ixChassis 192.168.31.42: Connected successfully to the chassis 192.168.31.42
*Debug 06/08 20:21:22.173 Chassis Chain: BLOCK = True
*Debug 06/08 20:21:22.206 Chassis Chain: Total wait time for ports to link up = 0.0, max wait time = 30
*Debug 06/08 20:21:22.230 Chassis Chain: chassis 192.168.31.42 connect return as 192.168.31.42
*Debug 06/08 20:21:22.230 Chassis Chain: addChassis hwMismatchChassis=[]
*Debug 06/08 20:21:22.736 ixViewOptions : ixViewOptions initialised successfully
*Debug 06/08 20:21:22.739 NetTraffic None@None: ###### CHANGED None@None:
*Debug 06/08 20:21:22.739 NetTraffic None@None:        None@None Acceleration Throughput from: True to: False
*Console 06/08 20:21:22.740 : !!WARNING!! Creating network group with no chassis chain!!!
*Debug 06/08 20:21:22.750 Test Server: ##### statManagerAddPorts [(1,1,9)]
*Debug 06/08 20:21:22.750 Test Server: ##### port path 192.168.31.42/Card1/Port9
*Debug 06/08 20:21:22.750 Test Server: AddPorts ['192.168.31.42/Card1/Port9'] to stat manager
*Debug 06/08 20:21:22.750 Test Server: ##### PortList.Add 192.168.31.42/Card1/Port9
*Debug 06/08 20:21:22.750 Test Server: ##### action AddPorts
*Console 06/08 20:21:22.753 : CREATING A PORT GROUP ON DEMAND
*Console 06/08 20:21:22.770 : Created port group with object id '16352a2a-dd14-4b13-ae30-4f5ee8d53ecf'
*Debug 06/08 20:21:23.35 ixNetProxy : convertValue failed for key name. Returning defaultValue
*Debug 06/08 20:21:23.38 Activity newAgent1: convertValue failed for key _tcl. Returning defaultValue
*Debug 06/08 20:21:23.440 Port Event Viewer: _createPlugin: classname=DI_ErrorsClasses namespace=IxLoad.Protocols.HTTP_Client.HTTP_Events filename=Plugins\agent\HTTP_Client\HTTPClient.UI.dll
*Debug 06/08 20:21:23.470 Port Event Viewer: EventClassManager.PluginActionEvent EVENT_CLASS_REGISTRATION RegisterEventClassData { IsRegistering=True, EventClassId=0 }
*Debug 06/08 20:21:23.471 Port Event Viewer: registerPluginsForAgent: DI_ErrorsClasses IxLoad.Protocols.HTTP_Client.HTTP_Events Plugins\agent\HTTP_Client\HTTPClient.UI.dll refcount=1
*Debug 06/08 20:21:23.474 ixPluginServicesRegistry: unregistered all of the activities - _providerDict={}
*Debug 06/08 20:21:23.474 ixPluginServicesRegistry: registered activity HTTPClient1 - _providerDict={}
*Debug 06/08 20:21:23.476 NetTraffic Traffic1@Network1: Community Traffic1@Network1 changing role from None to Client
*Debug 06/08 20:21:23.476 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 06/08 20:21:23.476 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Console 06/08 20:21:23.500 : SYNC: Network1 @ Thu Jun 08 20:21:23 2017 - duration - 0.0239999294281
*Debug 06/08 20:21:23.506 Activity HTTPClient1: convertValue failed for key _tcl. Returning defaultValue
*Debug 06/08 20:21:23.509 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 06/08 20:21:23.509 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Debug 06/08 20:21:23.512 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 06/08 20:21:23.512 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Debug 06/08 20:21:23.513 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 06/08 20:21:23.513 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: True to: False
*Debug 06/08 20:21:23.513 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 06/08 20:21:23.515 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: False to: True
*Debug 06/08 20:21:23.515 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 06/08 20:21:23.515 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: False to: True
*Debug 06/08 20:21:23.515 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 06/08 20:21:23.515 NetTraffic Traffic1@Network1:        Traffic1@Network1 Performance Acceleration from: False to: True
*Debug 06/08 20:21:23.516 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 06/08 20:21:23.523 Stat Controller: INITIALIZING THE STAT CONTROLLER.
*Debug 06/08 20:21:23.529 Stat Controller: Stat viewer instance ID = ixload_2
*Debug 06/08 20:21:23.529 Stat Controller: __initTestServer () ends
*Debug 06/08 20:21:23.529 Stat Controller: Registering login name IxLoad/S2/INBASDPC12364/Vinoy for aptixia default views
*Debug 06/08 20:21:23.555 Stat Controller: Registering for PathResolutionEvent
*Debug 06/08 20:21:23.556 Stat Controller: svCleanup() starts
*Debug 06/08 20:21:23.558 Stat Controller: svCleanup() Entities count=1
*Debug 06/08 20:21:23.638 Stat Controller: svCleanup() finishes
*Debug 06/08 20:21:23.640 Test Controller : statWrapper_timeout = 1800
*Debug 06/08 20:21:23.641 Test Controller : Creating the TestController FSM Thread
*Debug 06/08 20:21:23.663 ixFSM: 
  *** FSM Test Controller ENTERING STATE  TestController: UNCONFIGURED                     
*Debug 06/08 20:21:23.663 Test Controller: getFSMEvent(): Thread FSM Object not created for this thread!
*Debug 06/08 20:21:23.663 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:23.663 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:21:23.663 Test Controller:  PUBLISHING STATE : [ TestController: UNCONFIGURED                    ]
*Debug 06/08 20:21:23.663 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:23.697 Test Controller: Test Controller FSM: ENTRY Action for the State: UNCONFIGURED
*Debug 06/08 20:21:23.697 Test Controller : TEST CONTROLLER: Clearing all Stat Plugins map.
*Debug 06/08 20:21:23.697 Test Controller : clearStatPlugins(): Successfully CLEARED all the statistics plugins.
*Debug 06/08 20:21:23.697 Test Controller : set resultFolderCreatedAtApplyConfig to False
*Debug 06/08 20:21:23.697 Test Controller: Disconnecting from the stat-engine
*Debug 06/08 20:21:23.701 Stat Controller: STAT CONTROLLER: disconnectFromAllSources()
*Debug 06/08 20:21:23.701 Stat Controller: disconnectFromAllSources[672150320]: Disconnecting from []
*Debug 06/08 20:21:23.701 Stat Controller: disconnectFromAllSources[672150320]: Done!
*Debug 06/08 20:21:23.701 Stat Controller: Resetting stat threads
*Debug 06/08 20:21:23.779 IxAnalyzer : Analyzer - Initialize()...
*Debug 06/08 20:21:23.789 IxAnalyzer : Analyzer stub was created - Analyzer.CAnalyzerImpl
*Debug 06/08 20:21:23.854 IxAnalyzer : Analyzer - Initialize() returned 0
*Debug 06/08 20:21:23.855 IxAnalyzer : Analyzer - SetLiceseServer2(licenseServerName=', 'useExternalServer='True')...
*Debug 06/08 20:21:23.855 IxAnalyzer : Analyzer - SetLiceseServer2 returned 0
*Debug 06/08 20:21:23.855 IxAnalyzer : Analyzer - registering OnCaptureStatusChanged callback function for the capture view
*Debug 06/08 20:21:23.857 IxAnalyzer : Analyzer - registering OnErrorNotification callback function for the capture view
*Debug 06/08 20:21:23.858 IxAnalyzer : Analyzer - registering the callback functions succeeded
*Debug 06/08 20:21:23.858 IxAnalyzer : Analyzer - Initialized successfully
*Debug 06/08 20:21:23.858 IxAnalyzer : Analyzer - set test state - 0
*Debug 06/08 20:21:23.894 ixEvent: Adding subscriber: <bound method ixTestController._callbackFsmAppStateName of <Lib.TestController.ixTestController.ixTestController object at 0x28103210>> - im_self <Lib.TestController.ixTestController.ixTestController object at 0x28103210>; im_func <function _callbackFsmAppStateName at 0x147A7E30>
*Debug 06/08 20:21:23.895 Test Controller: updateSubscribers() ixTestPreStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 06/08 20:21:23.895 Test Controller: updateSubscribers() ixTestStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 06/08 20:21:23.907 Chassis Chain: Received chassis watch 192.168.31.42 - eventType: 2, oldValue: 1, newValue 1 err None
*Debug 06/08 20:21:23.907 Chassis Chain: ChassisManager:isInitEvent method. CurrentValue not in xml format: 1
*Debug 06/08 20:21:23.931 Stat Controller: Registering for StatRequestReadyEventHandler
*Console 06/08 20:21:23.933 : self.__testController: <Lib.TestController.ixTestController.ixTestController object at 0x28103210>
*Console 06/08 20:21:23.933 : done
*Info 06/08 20:21:23.933 Test Controller : Initializing Sdm Service. Searching for free port...
*Warning 06/08 20:21:26.492 CalSdmService: SDM service listening port is now: 8051.
*Debug 06/08 20:21:28.549 Test Controller : Test Controller Initialization Completed Successfully.
*Debug 06/08 20:21:28.555 Test Controller: updateSubscribers() ixTestPreStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 06/08 20:21:28.555 Test Controller : ixRunStateHandler received event  TestController: UNCONFIGURED                    
*Debug 06/08 20:21:28.556 Test Controller : ixRunStateHandler not running or cleaning. Exiting
*Debug 06/08 20:21:28.556 Test Controller: updateSubscribers() ixTestStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Console 06/08 20:21:28.556 : Initializing TCLApiTestController
*Debug 06/08 20:21:28.558 Test Controller : releaseConfigWaitFinish: releasing configuration.
*Debug 06/08 20:21:28.565 Stat Controller: svCleanup() starts
*Debug 06/08 20:21:28.565 Stat Controller: svCleanup() Entities count=1
*Debug 06/08 20:21:28.569 Stat Controller: svCleanup() finishes
*Debug 06/08 20:21:28.569 Stat Controller: Api.clearStats() called. Watches = []
*Debug 06/08 20:21:28.572 Stat Controller: Api.clearStats() called. Watches = [u'statcollectornetwork', u'statcollectorutils']
*Debug 06/08 20:21:28.572 Stat Controller:   Api.clearStats removing stat watch statcollectornetwork
*Debug 06/08 20:21:28.573 Stat Controller:   Api.clearStats removing stat watch statcollectorutils
*Debug 06/08 20:21:28.575 Test: Clear gridStats
*Debug 06/08 20:21:28.582 Stat Controller: Api.addStat: Adding Stat HTTP Requests Sent
*Debug 06/08 20:21:28.582 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful
*Debug 06/08 20:21:28.584 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (Provisional)
*Debug 06/08 20:21:28.584 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed
*Debug 06/08 20:21:28.585 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Write)
*Debug 06/08 20:21:28.585 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Read)
*Debug 06/08 20:21:28.585 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Bad Header)
*Debug 06/08 20:21:28.585 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx)
*Debug 06/08 20:21:28.586 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (400)
*Debug 06/08 20:21:28.586 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (401)
*Debug 06/08 20:21:28.588 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (403)
*Debug 06/08 20:21:28.588 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (404)
*Debug 06/08 20:21:28.588 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (407)
*Debug 06/08 20:21:28.588 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (408)
*Debug 06/08 20:21:28.589 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx other)
*Debug 06/08 20:21:28.589 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx)
*Debug 06/08 20:21:28.591 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (505)
*Debug 06/08 20:21:28.591 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx other)
*Debug 06/08 20:21:28.592 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (other)
*Debug 06/08 20:21:28.592 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Timeout)
*Debug 06/08 20:21:28.592 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Aborted)
*Debug 06/08 20:21:28.592 Stat Controller: Api.addStat: Adding Stat HTTP Aborted Before Request
*Debug 06/08 20:21:28.594 Stat Controller: Api.addStat: Adding Stat HTTP Aborted After Request
*Debug 06/08 20:21:28.594 Stat Controller: Api.addStat: Adding Stat HTTP Responses Received With Match
*Debug 06/08 20:21:28.595 Stat Controller: Api.addStat: Adding Stat HTTP Responses Received Without Match
*Debug 06/08 20:21:28.595 Stat Controller: Api.addStat: Adding Stat HTTP Intermediate Responses Received (1xx)
*Debug 06/08 20:21:28.595 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (2xx)
*Debug 06/08 20:21:28.595 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (3xx)
*Debug 06/08 20:21:28.596 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (301)
*Debug 06/08 20:21:28.596 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (302)
*Debug 06/08 20:21:28.598 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (303)
*Debug 06/08 20:21:28.598 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (307)
*Debug 06/08 20:21:28.598 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Requests Sent
*Debug 06/08 20:21:28.598 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Headers Received
*Debug 06/08 20:21:28.599 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Responses Successful
*Debug 06/08 20:21:28.601 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Responses Failed
*Debug 06/08 20:21:28.601 Stat Controller: Api.addStat: Adding Stat HTTP Total Chunks Received
*Debug 06/08 20:21:28.601 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunk Size
*Debug 06/08 20:21:28.601 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunks per Response
*Debug 06/08 20:21:28.602 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Requests Sent
*Debug 06/08 20:21:28.602 Stat Controller: Api.addStat: Adding Stat HTTP Total Chunks Sent
*Debug 06/08 20:21:28.604 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunk Size in Request
*Debug 06/08 20:21:28.604 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunks per Request
*Debug 06/08 20:21:28.605 Stat Controller: Api.addStat: Adding Stat Name1-Value1
*Debug 06/08 20:21:28.605 Stat Controller: Api.addStat: Adding Stat Counter1
*Debug 06/08 20:21:28.605 Stat Controller: Api.addStat: Adding Stat Name2-Value2
*Debug 06/08 20:21:28.607 Stat Controller: Api.addStat: Adding Stat Counter2
*Debug 06/08 20:21:28.607 Stat Controller: Api.addStat: Adding Stat Name3-Value3
*Debug 06/08 20:21:28.608 Stat Controller: Api.addStat: Adding Stat Counter3
*Debug 06/08 20:21:28.608 Stat Controller: Api.addStat: Adding Stat Name4-Value4
*Debug 06/08 20:21:28.608 Stat Controller: Api.addStat: Adding Stat Counter4
*Debug 06/08 20:21:28.608 Stat Controller: Api.addStat: Adding Stat Name5-Value5
*Debug 06/08 20:21:28.608 Stat Controller: Api.addStat: Adding Stat Counter5
*Debug 06/08 20:21:28.609 Stat Controller: Api.addStat: Adding Stat Name6-Value6
*Debug 06/08 20:21:28.611 Stat Controller: Api.addStat: Adding Stat Counter6
*Debug 06/08 20:21:28.611 Stat Controller: Api.addStat: Adding Stat Name7-Value7
*Debug 06/08 20:21:28.611 Stat Controller: Api.addStat: Adding Stat Counter7
*Debug 06/08 20:21:28.611 Stat Controller: Api.addStat: Adding Stat Name8-Value8
*Debug 06/08 20:21:28.612 Stat Controller: Api.addStat: Adding Stat Counter8
*Debug 06/08 20:21:28.612 Stat Controller: Api.addStat: Adding Stat Name9-Value9
*Debug 06/08 20:21:28.614 Stat Controller: Api.addStat: Adding Stat Counter9
*Debug 06/08 20:21:28.614 Stat Controller: Api.addStat: Adding Stat Name10-Value10
*Debug 06/08 20:21:28.614 Stat Controller: Api.addStat: Adding Stat Counter10
*Debug 06/08 20:21:28.615 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Received
*Debug 06/08 20:21:28.615 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Successful
*Debug 06/08 20:21:28.615 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Failed
*Debug 06/08 20:21:28.615 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Received
*Debug 06/08 20:21:28.617 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Successful
*Debug 06/08 20:21:28.617 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Failed
*Debug 06/08 20:21:28.618 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Received
*Debug 06/08 20:21:28.618 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Successful
*Debug 06/08 20:21:28.618 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Failed
*Debug 06/08 20:21:28.618 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Received
*Debug 06/08 20:21:28.619 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Successful
*Debug 06/08 20:21:28.621 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Failed
*Debug 06/08 20:21:28.621 Stat Controller: Api.addStat: Adding Stat Average Compression Ratio
*Debug 06/08 20:21:28.621 Stat Controller: Api.addStat: Adding Stat HTTP Simulated Users
*Debug 06/08 20:21:28.621 Stat Controller: Api.addStat: Adding Stat HTTP Concurrent Connections
*Debug 06/08 20:21:28.622 Stat Controller: Api.addStat: Adding Stat HTTP Connections
*Debug 06/08 20:21:28.622 Stat Controller: Api.addStat: Adding Stat HTTP Connection Attempts
*Debug 06/08 20:21:28.624 Stat Controller: Api.addStat: Adding Stat HTTP Connection Aborts
*Debug 06/08 20:21:28.624 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Aborts
*Debug 06/08 20:21:28.625 Stat Controller: Api.addStat: Adding Stat HTTP Transactions
*Debug 06/08 20:21:28.625 Stat Controller: Api.addStat: Adding Stat HTTP Bytes
*Debug 06/08 20:21:28.625 Stat Controller: Api.addStat: Adding Stat HTTP Requests Sent
*Debug 06/08 20:21:28.627 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful
*Debug 06/08 20:21:28.627 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (Provisional)
*Debug 06/08 20:21:28.628 Stat Controller: Api.addStat: Adding Stat HTTP Intermediate Responses Received (1xx)
*Debug 06/08 20:21:28.628 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (2xx)
*Debug 06/08 20:21:28.628 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (3xx)
*Debug 06/08 20:21:28.628 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (301)
*Debug 06/08 20:21:28.630 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (302)
*Debug 06/08 20:21:28.631 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (303)
*Debug 06/08 20:21:28.631 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (307)
*Debug 06/08 20:21:28.631 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed
*Debug 06/08 20:21:28.631 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Write)
*Debug 06/08 20:21:28.632 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Read)
*Debug 06/08 20:21:28.632 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Bad Header)
*Debug 06/08 20:21:28.634 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx)
*Debug 06/08 20:21:28.634 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (400)
*Debug 06/08 20:21:28.634 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (401)
*Debug 06/08 20:21:28.634 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (403)
*Debug 06/08 20:21:28.635 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (404)
*Debug 06/08 20:21:28.635 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (407)
*Debug 06/08 20:21:28.637 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (408)
*Debug 06/08 20:21:28.637 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx other)
*Debug 06/08 20:21:28.637 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx)
*Debug 06/08 20:21:28.638 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (505)
*Debug 06/08 20:21:28.638 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx other)
*Debug 06/08 20:21:28.638 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (other)
*Debug 06/08 20:21:28.638 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Timeout)
*Debug 06/08 20:21:28.640 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Aborted)
*Debug 06/08 20:21:28.641 Stat Controller: Api.addStat: Adding Stat HTTP Session Timeouts (408)
*Debug 06/08 20:21:28.641 Stat Controller: Api.addStat: Adding Stat HTTP Request Precondition Failed (412)
*Debug 06/08 20:21:28.641 Stat Controller: Api.addStat: Adding Stat HTTP Sessions Rejected (503)
*Debug 06/08 20:21:28.641 Stat Controller: Api.addStat: Adding Stat HTTP Aborted Before Request
*Debug 06/08 20:21:28.642 Stat Controller: Api.addStat: Adding Stat HTTP Aborted After Request
*Debug 06/08 20:21:28.642 Stat Controller: Api.addStat: Adding Stat HTTP Transactions Active
*Debug 06/08 20:21:28.644 Stat Controller: Api.addStat: Adding Stat HTTP Users Active
*Debug 06/08 20:21:28.644 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Received
*Debug 06/08 20:21:28.644 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Received
*Debug 06/08 20:21:28.644 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Received
*Debug 06/08 20:21:28.645 Stat Controller: Api.addStat: Adding Stat Unrecognized Content-Encoding Received
*Debug 06/08 20:21:28.645 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Decode Successful
*Debug 06/08 20:21:28.645 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Successful
*Debug 06/08 20:21:28.647 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Successful
*Debug 06/08 20:21:28.647 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Decode Failed
*Debug 06/08 20:21:28.647 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed
*Debug 06/08 20:21:28.647 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed - Data Error
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed - Decoding Error
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed - Data Error
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed - Decoding Error
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoded Headers Received
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Decode Successful
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Decode Failed
*Debug 06/08 20:21:28.648 Stat Controller: Api.addStat: Adding Stat Total Chunks Received
*Debug 06/08 20:21:28.650 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Headers Sent
*Debug 06/08 20:21:28.650 Stat Controller: Api.addStat: Adding Stat Total Chunks Sent
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Content-MD5 Responses Received
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Content-MD5 Check Successful
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Content-MD5 Check Failed
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Responses Received
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Check Successful
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Check Failed
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat HTTP Bytes Sent
*Debug 06/08 20:21:28.651 Stat Controller: Api.addStat: Adding Stat HTTP Bytes Received
*Debug 06/08 20:21:28.653 Stat Controller: Api.addStat: Adding Stat HTTP Content Bytes Sent
*Debug 06/08 20:21:28.653 Stat Controller: Api.addStat: Adding Stat HTTP Content Bytes Received
*Debug 06/08 20:21:28.653 Stat Controller: Api.addStat: Adding Stat HTTP Decompressed Content Bytes Received
*Debug 06/08 20:21:28.653 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Received
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Sent
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Path Match Failed)
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Domain Match Failed)
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Cookiejar Overflow)
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Probabilistic Reject)
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Cookie headers Rejected - (Memory Overflow)
*Debug 06/08 20:21:28.654 Stat Controller: Api.addStat: Adding Stat HTTP Connect Time (us)
*Debug 06/08 20:21:28.655 Stat Controller: Api.addStat: Adding Stat HTTP Time To First Byte (us)
*Debug 06/08 20:21:28.655 Stat Controller: Api.addStat: Adding Stat HTTP Time To Last Byte (us)
*Debug 06/08 20:21:28.655 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Average (us)
*Debug 06/08 20:21:28.655 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Minimum (us)
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Maximum (us)
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client Total Data Integrity Check Failed
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client Total Data Integrity Check Succeeded
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Data Frames Received
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Header Frames Received
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Priority Frames Received
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Reset Stream Frames Received
*Debug 06/08 20:21:28.657 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Frames Received
*Debug 06/08 20:21:28.658 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Push Promise Frames Received
*Debug 06/08 20:21:28.658 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Ping Frames Received
*Debug 06/08 20:21:28.658 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Go Away Frames Received
*Debug 06/08 20:21:28.658 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Window Update Frames Received
*Debug 06/08 20:21:28.660 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Continuation Frames Received
*Debug 06/08 20:21:28.660 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Data Frames Sent
*Debug 06/08 20:21:28.660 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Header Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Priority Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Reset Stream Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Push Promise Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Ping Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Go Away Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Window Update Frames Sent
*Debug 06/08 20:21:28.661 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Continuation Frames Sent
*Debug 06/08 20:21:28.663 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Initiated by Client
*Debug 06/08 20:21:28.663 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Initiated by Server
*Debug 06/08 20:21:28.663 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Succeeded (Client to Server)
*Debug 06/08 20:21:28.663 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Succeeded (Server to Client)
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Failed (Client to Server)
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Failed (Server to Client)
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connection Upgrade Succeeded
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connection Upgrade Failed
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Protocol Error
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Internal Error
*Debug 06/08 20:21:28.664 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Flow Control Error
*Debug 06/08 20:21:28.665 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Timeout Error
*Debug 06/08 20:21:28.665 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Stream Closed Error
*Debug 06/08 20:21:28.665 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Frame Size Error
*Debug 06/08 20:21:28.665 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Refused Stream Error
*Debug 06/08 20:21:28.667 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Stream Cancelled Error
*Debug 06/08 20:21:28.667 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Compression Error
*Debug 06/08 20:21:28.667 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connect Error
*Debug 06/08 20:21:28.667 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Enhance Calm Error
*Debug 06/08 20:21:28.667 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Inadequate Security Error
*Debug 06/08 20:21:28.668 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 HTTP1_1 Required Error
*Debug 06/08 20:21:28.668 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received
*Debug 06/08 20:21:28.668 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent
*Debug 06/08 20:21:28.668 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (close_notify)
*Debug 06/08 20:21:28.670 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (close_notify)
*Debug 06/08 20:21:28.670 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unexpected_message)
*Debug 06/08 20:21:28.670 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unexpected_message)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (bad_record_mac)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (bad_record_mac)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decryption_failed)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decryption_failed)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (record_overflow)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (record_overflow)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decompression_failure)
*Debug 06/08 20:21:28.671 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decompression_failure)
*Debug 06/08 20:21:28.673 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (handshake_failure)
*Debug 06/08 20:21:28.673 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (handshake_failure)
*Debug 06/08 20:21:28.673 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (no_certificate)
*Debug 06/08 20:21:28.673 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (no_certificate)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (bad_certificate)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (bad_certificate)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unsupported_certificate)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unsupported_certificate)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_revoked)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_revoked)
*Debug 06/08 20:21:28.674 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_expired)
*Debug 06/08 20:21:28.676 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_expired)
*Debug 06/08 20:21:28.676 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_unknown)
*Debug 06/08 20:21:28.676 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_unknown)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (illegal_parameter)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (illegal_parameter)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unknown_ca)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unknown_ca)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (access_denied)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (access_denied)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decode_error)
*Debug 06/08 20:21:28.677 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decode_error)
*Debug 06/08 20:21:28.678 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decrypt_error)
*Debug 06/08 20:21:28.678 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decrypt_error)
*Debug 06/08 20:21:28.678 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (export_restriction)
*Debug 06/08 20:21:28.678 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (export_restriction)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (protocol_version)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (protocol_version)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (insufficient_security)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (insufficient_security)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (internal_error)
*Debug 06/08 20:21:28.680 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (internal_error)
*Debug 06/08 20:21:28.681 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (user_canceled)
*Debug 06/08 20:21:28.681 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (user_canceled)
*Debug 06/08 20:21:28.681 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (no_renegotiation)
*Debug 06/08 20:21:28.681 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (no_renegotiation)
*Debug 06/08 20:21:28.683 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (undefined error)
*Debug 06/08 20:21:28.683 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (undefined error)
*Debug 06/08 20:21:28.683 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (no cipher)
*Debug 06/08 20:21:28.683 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (no cipher)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (no certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (no certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (bad certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (bad certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (unsupported certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (unsupported certificate)
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Received
*Debug 06/08 20:21:28.684 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent
*Debug 06/08 20:21:28.686 Stat Controller: Api.addStat: Adding Stat Client Hello Sent
*Debug 06/08 20:21:28.686 Stat Controller: Api.addStat: Adding Stat Client Hello Received
*Debug 06/08 20:21:28.686 Stat Controller: Api.addStat: Adding Stat Server Hello Sent
*Debug 06/08 20:21:28.686 Stat Controller: Api.addStat: Adding Stat Server Hello Received
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat Hello Requests Sent
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat Hello Requests Received
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Session Reuse Success
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Session Reuse Failed
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Concurrent Sessions
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Bytes Sent
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Bytes Received
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Throughput Bytes
*Debug 06/08 20:21:28.687 Stat Controller: Api.addStat: Adding Stat SSL Application Data Bytes
*Debug 06/08 20:21:28.688 Stat Controller: Api.addStat: Adding Stat SSL Certificate Validation Failure
*Debug 06/08 20:21:28.688 Stat Controller: Api.addStat: Adding Stat SSL Certificate Self Signed
*Debug 06/08 20:21:28.688 Stat Controller: Api.addStat: Adding Stat SSL Certificate CA Signed
*Debug 06/08 20:21:28.688 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unrecognized name)
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat SSL SNI extension sent successfully
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat SSL SNI extension mismatch
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat SSL session ticket reuse success
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat SSL session ticket reuse failure
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat SSL Negotiation Finished Successfully
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat TCP SYN Sent
*Debug 06/08 20:21:28.690 Stat Controller: Api.addStat: Adding Stat TCP SYN_SYN-ACK Received
*Debug 06/08 20:21:28.691 Stat Controller: Api.addStat: Adding Stat TCP SYN Failed
*Debug 06/08 20:21:28.691 Stat Controller: Api.addStat: Adding Stat TCP SYN-ACK Sent
*Debug 06/08 20:21:28.691 Stat Controller: Api.addStat: Adding Stat TCP Connection Requests Failed
*Debug 06/08 20:21:28.691 Stat Controller: Api.addStat: Adding Stat TCP Connections Established
*Debug 06/08 20:21:28.691 Stat Controller: Api.addStat: Adding Stat TCP FIN Sent
*Debug 06/08 20:21:28.693 Stat Controller: Api.addStat: Adding Stat TCP FIN Received
*Debug 06/08 20:21:28.693 Stat Controller: Api.addStat: Adding Stat TCP FIN-ACK Sent
*Debug 06/08 20:21:28.693 Stat Controller: Api.addStat: Adding Stat TCP FIN-ACK Received
*Debug 06/08 20:21:28.693 Stat Controller: Api.addStat: Adding Stat TCP Resets Sent
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Resets Received
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Retries
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Timeouts
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Accept Queue Entries
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Listen Queue Drops
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Connections in ESTABLISHED State
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Connections in SYN-SENT State
*Debug 06/08 20:21:28.694 Stat Controller: Api.addStat: Adding Stat TCP Connections in SYN-RECEIVED State
*Debug 06/08 20:21:28.696 Stat Controller: Api.addStat: Adding Stat TCP Connections in FIN-WAIT-1 State
*Debug 06/08 20:21:28.696 Stat Controller: Api.addStat: Adding Stat TCP Connections in FIN-WAIT-2 State
*Debug 06/08 20:21:28.696 Stat Controller: Api.addStat: Adding Stat TCP Connections in TIME-WAIT State
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSE STATE
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSE-WAIT State
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Connections in LAST-ACK State
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Connections in LISTENING State
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSING State
*Debug 06/08 20:21:28.697 Stat Controller: Api.addStat: Adding Stat TCP Internally Aborted Connections
*Debug 06/08 20:21:28.755 Test Controller : WARNING: The repository object is EMPTY.
*Debug 06/08 20:21:28.766 Test Controller : WARNING: The repository object is EMPTY.
*Debug 06/08 20:21:28.776 Test Controller : Uploading tcl code to tcl interpreter for test event callbacks
*Debug 06/08 20:21:28.778 POP3_Client.Pop3Command: Command list upgraded!
*Console 06/08 20:21:28.780 : SYNC: Network1 @ Thu Jun 08 20:21:28 2017 - duration - 0.0019998550415
*Debug 06/08 20:21:28.782 Test Controller : @@@run: doing start run...
*Debug 06/08 20:21:28.786 Test Controller : ##### ChassisChain synced: True
*Debug 06/08 20:21:28.788 Test Controller: testName = Test1 ; stateName =  TestController: UNCONFIGURED                    ; eventId =  TestController: Start the Run ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:28.789 Test Controller : @@@run:  using ::ixTestControllerMonitor as monitor variable
*Debug 06/08 20:21:28.855 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:28.855 Test Controller: event ID received =  TestController: Start the Run
*Debug 06/08 20:21:28.855 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Start the Run
*Warning 06/08 20:21:28.871 Advanced Timeline : The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Debug 06/08 20:21:28.928 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Start the Run
*Debug 06/08 20:21:28.928 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: UNCONFIGURED                    
*Debug 06/08 20:21:28.928 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:28.928 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:28.930 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:21:28.930 Test Controller:  PUBLISHING STATE : [ TestController: CONFIG INIT                     ]
*Debug 06/08 20:21:28.930 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:28.930 Test Controller : ixRunStateHandler received event  TestController: CONFIG INIT                     
*Debug 06/08 20:21:28.950 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIG INIT
*Debug 06/08 20:21:28.951 IxAnalyzer : Analyzer - set test state - 1
*Debug 06/08 20:21:28.951 Test Controller : set resultFolderCreatedAtApplyConfig to False
*Debug 06/08 20:21:28.953 Test Controller : SM Cancel being invoked
*Debug 06/08 20:21:28.954 Test Controller : SM Cancel completed
*Debug 06/08 20:21:28.959 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Check Config ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:28.980 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: UNCONFIGURED', EVENT RECEIVED:  TestController: Start the Run
  NEW STATE: 'TestController: CONFIG INIT', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:28.980 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:28.980 Test Controller: event ID received =  TestController: Check Config
*Debug 06/08 20:21:28.980 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Check Config
*Debug 06/08 20:21:28.980 Test Server: IP Overlapping Disabled
*Debug 06/08 20:21:28.990 Test: dest [10.72.2.3] not in destinations[[]]
*Debug 06/08 20:21:28.990 Test: DESTINATION IP ADDRESS IDENTIFIED - dest = 10.72.2.3 port = 80
*Debug 06/08 20:21:28.990 Test: dest [10.72.2.3] not in destinations[[]]
*Debug 06/08 20:21:28.990 Test: DESTINATION IP ADDRESS IDENTIFIED - dest = 10.72.2.3 port = 80
*Debug 06/08 20:21:28.992 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:28.992 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:29.0 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 global featureDict = {0: 1, 1: 0, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 25: 0, 26: -1, 27: 0}
*Debug 06/08 20:21:29.2 Traffic Traffic1: Traffic Traffic1 before reviseNetTrafficFeatures aggregatedFeatures = {0: 1, 1: 0, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 13: 0, 14: 0, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 0, 25: 0, 26: -1, 27: 0}
*Debug 06/08 20:21:29.6 Network Network1: ************ Not Multicore; Returning False; **************
*Debug 06/08 20:21:29.6 NetTraffic Traffic1@Network1: ************ Conditional View Enable; Returning False; **************
*Debug 06/08 20:21:29.6 NetTraffic Traffic1@Network1: isConditionalViewSupported result=True self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=True
*Debug 06/08 20:21:29.6 NetTraffic Traffic1@Network1: fastTcpStack
*Debug 06/08 20:21:29.6 Traffic Traffic1: Traffic Traffic1 after reviseNetTrafficFeatures aggregatedFeatures = {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 0, 25: 0, 26: -1, 27: 0}
*Debug 06/08 20:21:29.9 Network Network1: Port(s) [(1,1,9)] in network Network1 do not support L7 mode)
*Debug 06/08 20:21:29.51 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 06/08 20:21:29.52 Traffic Traffic1: Available memory from card 2060409956.
*Debug 06/08 20:21:29.52 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:29.52 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:29.53 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:29.53 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:29.53 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 06/08 20:21:29.53 Network Network1: Setting activity id for community Traffic1@Network1
*Debug 06/08 20:21:29.55 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Adding flow HTTPClient1 with RuntimeId 0 to activityIdList
*Debug 06/08 20:21:29.56 Traffic Traffic1: agent HTTP requires advancedFeatures: []
*Debug 06/08 20:21:29.61 NetTraffic Traffic1@Network1: Max allowed activities is 16
*Warning 06/08 20:21:29.62 NetTraffic Traffic1@Network1: The number of Simulated Users configured (20000) is greater than the total IPv4 Pool Size (1) for activity 'HTTPClient1' in Client Traffic-Network Mapping 'Traffic1@Network1'. Some users will use the same addresses as others.
*Debug 06/08 20:21:29.66 Traffic Traffic1: Available memory from card 2060409956.
*Debug 06/08 20:21:29.66 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:29.66 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:29.68 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:29.68 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:29.68 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 06/08 20:21:29.69 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                     TCP Ports requirement:
                                     UsersPerIP: 0 UsersPerPort: 0 TcpPortsPerUser: 3 Ports required = 0.000000
*Debug 06/08 20:21:29.69 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                   UDP Ports requirement:
                                   UsersPerIP: 0 UsersPerPort: 0 UdpPortsPerUser: 0 Ports required = 0.000000
*Debug 06/08 20:21:29.69 *PCU*: Traffic1@Network1: HTTPClient1: Ports required for memory 0.0554025218091, tcp/udp dominance 0
*Debug 06/08 20:21:29.82 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 06/08 20:21:29.85 *PCU*: Traffic1@Network1: HTTPClient1: Objective Performance is 0.0 for objective simulatedUsers cardFamily acceleron-np configId IxStack:
*Debug 06/08 20:21:29.85 *PCU*: Traffic1@Network1: HTTPClient1: Ports requirement for agent specified max is 0, objectiveValue 20000, maxObjectiveFromObjectivePerformance 0.0, usingMaxAllowedObjective 0,
*Warning 06/08 20:21:29.88 Advanced Timeline : The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Debug 06/08 20:21:29.89 Test: buildDefaultStatViewList() CSV logging is Enabled.
*Debug 06/08 20:21:29.89 Test: @ Building default StatView list...
*Debug 06/08 20:21:29.91 Test: @ Building activity HTTPClient1 StatView list...
*Debug 06/08 20:21:29.99 Test: @ Building Protocol CSV Views...
*Debug 06/08 20:21:29.99 Test: buildDefaultPerProtocolStats()
*Debug 06/08 20:21:29.101 Test: Building CSV view for protocol = HTTP, role = Client...
*Debug 06/08 20:21:29.102 Test: Using longest activity HTTPClient1 for creating view for protocol = HTTP, role = Client 
*Debug 06/08 20:21:29.104 Test: @ Building Test CSV Views...
*Debug 06/08 20:21:29.104 Test: buildDefaultTestStats()
*Debug 06/08 20:21:29.104 Test: @ Building CSV view for test Client...
*Debug 06/08 20:21:29.105 Test: using longest activity HTTPClient1 for creating view for type = Client 
*Debug 06/08 20:21:29.105 Test: @ Building Run State Views...
*Debug 06/08 20:21:29.142 Test: asmXmvAllPortDict={0: [(1,1,9)]}
*Debug 06/08 20:21:29.144 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: RebootPorts ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.144 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Check Config
*Debug 06/08 20:21:29.144 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.144 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.144 Test Controller: event ID received =  TestController: RebootPorts
*Debug 06/08 20:21:29.144 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: RebootPorts
*Debug 06/08 20:21:29.144 Test Controller : TEST CONTROLLER: setupCommunityControllers()
*Debug 06/08 20:21:29.144 Test Controller : Creating NEW COMMUNITY CONTROLLER : Traffic1@Network1
*Console 06/08 20:21:29.145 : ixPortController for card (1,1) reports isMultiNic = False
*Debug 06/08 20:21:29.165 Network: Unregistered PortGroup or non-PG object changed!
*Debug 06/08 20:21:29.176 ixFSM: 
  *** FSM Community Controller Traffic1@Network1 ENTERING STATE  Community Controller: INIT CONFIG           
*Debug 06/08 20:21:29.176 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: INIT CONFIG  :: Traffic1@Network1 
*Debug 06/08 20:21:29.176 Community Controller: Clearing cache on Traffic1@Network1
*Debug 06/08 20:21:29.176 Community Controller: Community cache cleared on Traffic1@Network1 .
*Debug 06/08 20:21:29.177 Test Controller : <Community Controller thread started> Traffic1@Network1
*Debug 06/08 20:21:29.177 Test Controller : Following communities have been successfully added to the list.
*Debug 06/08 20:21:29.178 Test Controller : Community Controller = Traffic1@Network1
*Debug 06/08 20:21:29.178 Test Controller: setUserStopRunFlag is False
*Debug 06/08 20:21:29.178 Test Controller : The port list for the active test.
*Debug 06/08 20:21:29.178 Community Controller: Initialize the Port List for the community : Traffic1@Network1
*Debug 06/08 20:21:29.178 Community Controller: Ports : [(1,1,9)]
*Debug 06/08 20:21:29.213 Test Controller: Total number of Ports for this test are: 1
*Debug 06/08 20:21:29.214 Event Scheduler: addEvent() Function. interval = 0, action = <bound method ixTestControllerFSMThread._configuringTimerExpired of <ixTestControllerFSMThread(Test Controller, started daemon 6632)>>, actionArguments=(()), iteration=0, startDelay=2400 and Timer Index = 1
*Debug 06/08 20:21:29.216 Event Scheduler: EVENT ADDED to the events map. Timer Index=1
*Debug 06/08 20:21:29.216 Test Controller: [ Configuring Watch Dog Timer created. ] Timer ID = 1 
*Debug 06/08 20:21:29.216 Test Controller: [ Configured timeout interval = 0 s, start delay = 2400 s. ]
*Debug 06/08 20:21:29.216 Test Controller: Total number of communities for this test: 1
*Debug 06/08 20:21:29.217 Network: ##### Removing port from portList (1,1,9)
*Debug 06/08 20:21:29.217 Chassis Chain: Taking ownership on [[1, 1, 9]].
*Info 06/08 20:21:29.351 Chassis Chain: Successfully took ownership on the ports [[1, 1, 9]]
*Info 06/08 20:21:29.500 Test Controller: Tearing down all network interfaces started...
*Info 06/08 20:21:29.520 Test Controller: Tearing down all interfaces completed...
*Debug 06/08 20:21:29.522 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Switching to L7 Mode ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.523 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: RebootPorts
*Debug 06/08 20:21:29.523 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.523 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.523 Test Controller: event ID received =  TestController: Switching to L7 Mode
*Debug 06/08 20:21:29.525 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Switching to L7 Mode
*Debug 06/08 20:21:29.525 Test Controller : switchPortOperationMode() start
*Debug 06/08 20:21:29.525 Test Controller : _getSwitchingOperationModePortMap on ports [(1,1,9)]
*Debug 06/08 20:21:29.526 Chassis Chain: Getting operation mode on [(1,1,9)]
*Debug 06/08 20:21:29.539 Chassis Chain: getSwitchingOperationModePortMap for multiModePortList [(1,1,9)] - {}
*Debug 06/08 20:21:29.539 Test Controller : switchPortOperationMode() end
*Debug 06/08 20:21:29.539 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Finish PortConfig ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.539 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Switching to L7 Mode
*Debug 06/08 20:21:29.539 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.539 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.539 Test Controller: event ID received =  TestController: Finish PortConfig
*Debug 06/08 20:21:29.540 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Finish PortConfig
*Debug 06/08 20:21:29.540 Test Controller: _TransAction_ApplyAggregationMode
*Debug 06/08 20:21:29.540 Test: resetAggregationMode()
*Debug 06/08 20:21:29.540 Test: resetAsmXmvCardAggregationMode()
*Debug 06/08 20:21:29.540 Test: asmXmvAllPortDict={0: [(1,1,9)]}
*Debug 06/08 20:21:29.542 Chassis Chain: Getting aggregation mode on cards [(1,1)]...
*Debug 06/08 20:21:29.552 Chassis Chain: Getting aggregation mode is done
*Debug 06/08 20:21:29.553 Test: applyAggregationMode()
*Debug 06/08 20:21:29.553 Test: applyPartitionAggregationMode()
*Debug 06/08 20:21:29.555 Chassis Chain: Deleting partition on [(1,1,9)] ...
*Debug 06/08 20:21:29.568 Chassis Chain: Deleting partition on [(1,1,9)] is done
*Debug 06/08 20:21:29.569 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Reboot Ports Done ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.571 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Finish PortConfig
*Debug 06/08 20:21:29.571 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.571 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.571 Test Controller: event ID received =  TestController: Reboot Ports Done
*Debug 06/08 20:21:29.571 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Reboot Ports Done
*Debug 06/08 20:21:29.572 Test Controller : Reset the ports - [(1,1,9)]
*Debug 06/08 20:21:29.572 Chassis Chain: ************** REGISTER CALLBACK ***********************
*Debug 06/08 20:21:29.573 Chassis Chain: **CALLBACK = Ixia.RpFramework.Client.ArgumentsCallback
*Debug 06/08 20:21:29.573 Chassis Chain: ************** REGISTER CALLBACK ***********************
*Debug 06/08 20:21:29.573 Chassis Chain: **CALLBACK = Ixia.RpFramework.Client.ArgumentsCallback
*Debug 06/08 20:21:29.575 Chassis Chain - AptIxia Callbacks: Reset factory default response = System.Object[]
*Debug 06/08 20:21:29.575 Test Controller : switchPortOperationMode() start
*Debug 06/08 20:21:29.575 Chassis Chain - AptIxia Callbacks: error_exception = None
*Debug 06/08 20:21:29.578 Test Controller : _getSwitchingOperationModePortMap on ports [(1,1,9)]
*Debug 06/08 20:21:29.578 Test Controller : testServerCallback_ResetPortsResponse failedPorts = [] for setting factory defaults
*Debug 06/08 20:21:29.579 Chassis Chain: Getting operation mode on [(1,1,9)]
*Debug 06/08 20:21:29.579 Test Controller : Sending kEventTestController_AptixiaResetFactoryPortsSuccess for setting factory defaults
*Debug 06/08 20:21:29.581 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: The callback received for the reset factory ports and the api was completed successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.707 Chassis Chain: getSwitchingOperationModePortMap for multiModePortList [(1,1,9)] - {}
*Debug 06/08 20:21:29.709 Chassis Chain - AptIxia Callbacks: Reset mode default response = System.Object[]
*Debug 06/08 20:21:29.709 Test Controller : switchPortOperationMode() end
*Debug 06/08 20:21:29.710 Chassis Chain - AptIxia Callbacks: error_exception = None
*Debug 06/08 20:21:29.710 Test Controller : switchPortLineSpeed() start
*Info 06/08 20:21:29.711 Chassis Chain - AptIxia Callbacks: Reset mode defaults completed successfully on the ports [(1,1,9)]
*Debug 06/08 20:21:29.713 Test Controller : switchPortLineSpeed() end
*Debug 06/08 20:21:29.713 Test Controller : testServerCallback_ResetPortsResponse failedPorts = [] for setting mode defaults
*Debug 06/08 20:21:29.714 Test Controller : Sending kEventTestController_AptixiaResetModePortsSuccess for setting mode defaults
*Debug 06/08 20:21:29.716 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: The callback received for the reset mode ports and the api was completed successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.749 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) subrange 192.168.31.42;1;9: count=1 endpointId=200000 endpointIdIncrement=1 endpointType=IPv4
*Debug 06/08 20:21:29.750 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetRangeDistribution took 0.0320000648499, it returned 1 ranges with total endpoint count 1
*Debug 06/08 20:21:29.752 NetTraffic Traffic1@Network1: Ramp up value for activity 'HTTPClient1' on port (1,1,9) is 1
*Debug 06/08 20:21:29.752 NetTraffic Traffic1@Network1: Ramp down value for activity 'HTTPClient1' on port (1,1,9) is 0
*Info 06/08 20:21:29.756 Test: Verifying license availability for test Test1...
*Debug 06/08 20:21:29.757 Licensing: Checking out license for test Test1...
*Debug 06/08 20:21:29.765 Traffic Traffic1: agent HTTP requires advancedFeatures: []
*Debug 06/08 20:21:29.765 Traffic Traffic1: agent HTTP requires subscriptionFeatures: []
*Debug 06/08 20:21:29.765 NetTraffic Traffic1@Network1: community Traffic1@Network1 has features: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C16250>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C164B0>}; featureLicenseCountMap: {}
*Debug 06/08 20:21:29.766 Test: Chassis 192.168.31.42 - test Test1 has features requiring license check: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C16250>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C164B0>}
*Debug 06/08 20:21:29.766 Licensing: There are no counted licenses per port for test Test1!
*Info 06/08 20:21:29.767 Licensing: Checking out license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42'] ...
*Info 06/08 20:21:29.865 Licensing: License check out succeeded for test Test1
*Info 06/08 20:21:29.868 Licensing: Checking in license for test Test1...
*Info 06/08 20:21:29.868 Licensing: Checking in license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42']...
*Debug 06/08 20:21:29.868 Licensing: Release license batch _287bd814_p_MULTI_IXLM_HANDLE size = 1 debug=0
*Info 06/08 20:21:29.869 Licensing: License check in succeeded for test Test1.

*Info 06/08 20:21:29.869 Test: License availability verification succeeded for test Test1.
*Debug 06/08 20:21:29.871 Network Network1: Network 'Network1': needAutoloadPackage False
*Debug 06/08 20:21:29.970 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Reboot Ports Done
*Debug 06/08 20:21:29.970 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.970 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.971 Test Controller: event ID received =  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 06/08 20:21:29.971 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 06/08 20:21:29.971 Test Controller: Test Controller FSM: Internal Transition Action: resetFactoryPortsCompleted()
*Debug 06/08 20:21:29.971 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.973 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 06/08 20:21:29.973 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.973 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.973 Test Controller: event ID received =  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 06/08 20:21:29.973 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 06/08 20:21:29.973 Test Controller: Test Controller FSM: Internal Transition Action: resetModePortsCompleted()
*Debug 06/08 20:21:29.973 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:29.974 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 06/08 20:21:29.974 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.974 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.976 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 06/08 20:21:29.976 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:29.976 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 0, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 06/08 20:21:29.976 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:29.976 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:29.976 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:29.976 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 06/08 20:21:29.976 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:29.976 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 0, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 06/08 20:21:29.977 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:29.977 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:30.65 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:30.65 Community Controller Traffic1@Network1: event ID received =  Community Controller: Connect to ports
*Debug 06/08 20:21:30.65 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Connect to ports
*Debug 06/08 20:21:30.65 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: INIT CONFIG  :: Traffic1@Network1 
*Debug 06/08 20:21:30.65 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Connect to ports
*Debug 06/08 20:21:30.65 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: INIT CONFIG          
*Debug 06/08 20:21:30.65 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONNECT TO PORTS     
*Debug 06/08 20:21:30.65 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONNECT TO PORTS :: Traffic1@Network1 
*Debug 06/08 20:21:30.68 Community Controller: Set the Ports with the Port Controller
*Debug 06/08 20:21:30.68 Community Controller: Ports : [(1,1,9)]
*Debug 06/08 20:21:30.68 Community Controller: Connecting to all ports..
*Debug 06/08 20:21:30.68 Socket: Connecting to (u'10.0.1.9', 1911) through ('192.168.31.42', 1080)
*Debug 06/08 20:21:30.69 [Traffic1@Network1] Port Controller: @@@ Starting PumpData thread @@@

*Debug 06/08 20:21:30.69 [Traffic1@Network1] Port Controller: Connecting to 1 hosts...
*Debug 06/08 20:21:30.121 Socket: Connected to (1,1,9)!
*Debug 06/08 20:21:30.171 [Traffic1@Network1] Port Controller: Setting connection id 7ae555e7-0861-462d-9e41-e8efea4fd414
*Debug 06/08 20:21:31.217 [Traffic1@Network1] Port Controller: (1,1,9) connect dirty = no
*Debug 06/08 20:21:31.470 [Traffic1@Network1] Port Controller: (1,1,9): setConnectionId: None
*Debug 06/08 20:21:31.571 [Traffic1@Network1] Port Controller: (1,1,9): setSystemTime: This port does not need time syncing
*Debug 06/08 20:21:31.571 Community Controller: Successfully Connected to all ports in 1.50300002098 seconds
*Debug 06/08 20:21:31.671 [Traffic1@Network1] Port Controller: (1,1,9): getLinuxDistribution: 0
*Debug 06/08 20:21:31.671 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  Community Controller: Community connected to ports successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:31.673 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: INIT CONFIG', EVENT RECEIVED:  Community Controller: Connect to ports
  NEW STATE: 'Community Controller: CONNECT TO PORTS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:31.674 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:31.674 Community Controller Traffic1@Network1: event ID received =  Community Controller: Prepare configuration
*Debug 06/08 20:21:31.674 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Prepare configuration
*Debug 06/08 20:21:31.674 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONNECT TO PORTS  :: Traffic1@Network1 
*Debug 06/08 20:21:31.674 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Prepare configuration
*Debug 06/08 20:21:31.674 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONNECT TO PORTS     
*Debug 06/08 20:21:31.674 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: PREPARING CONFIGURATION 
*Debug 06/08 20:21:31.676 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: PREPARING CONFIGURATION :: Traffic1@Network1 
*Debug 06/08 20:21:31.676 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONNECT TO PORTS', EVENT RECEIVED:  Community Controller: Prepare configuration
  NEW STATE: 'Community Controller: PREPARING CONFIGURATION', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:31.677 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:31.677 Test Controller: event ID received =  Community Controller: Community connected to ports successfully
*Debug 06/08 20:21:31.677 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community connected to ports successfully
*Debug 06/08 20:21:31.677 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:31.678 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community connected to ports successfully
*Debug 06/08 20:21:31.678 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:31.678 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:31.678 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 06/08 20:21:31.680 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:31.680 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 1, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 06/08 20:21:31.680 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: All Communities Cleaned and Initialized Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:31.680 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:31.680 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:31.680 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:31.680 Test Controller: event ID received =  TestController: All Communities Cleaned and Initialized Successfully
*Debug 06/08 20:21:31.681 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Cleaned and Initialized Successfully
*Debug 06/08 20:21:31.683 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Entering Configure NetTraffic State ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:31.683 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Cleaned and Initialized Successfully
*Debug 06/08 20:21:31.683 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:31.684 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:31.684 Test Controller: event ID received =  TestController: Entering Configure NetTraffic State
*Debug 06/08 20:21:31.684 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Entering Configure NetTraffic State
*Debug 06/08 20:21:31.714 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIG INIT
*Debug 06/08 20:21:31.736 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Entering Configure NetTraffic State
*Debug 06/08 20:21:31.736 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIG INIT                     
*Debug 06/08 20:21:31.737 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 06/08 20:21:31.737 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:31.737 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:21:31.737 Test Controller:  PUBLISHING STATE : [ TestController: CONFIG NETWORK & TRAFFIC        ]
*Debug 06/08 20:21:31.737 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:31.737 Test Controller : ixRunStateHandler received event  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 06/08 20:21:31.759 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 06/08 20:21:31.759 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 06/08 20:21:31.759 Test Controller: (Re)configuring network because _networkConfigured is False.
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Starting rule resolution
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Now matching for (['Kone', 'TCP CC', 'KSE SSL HTTP', 'Kone Compatible'])
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Checking rule 0.
*Debug 06/08 20:21:31.760 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Checking rule 1.
*Debug 06/08 20:21:31.760 ixDodRuleEngine: match returns False for KSE New SSL
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Checking rule 2.
*Debug 06/08 20:21:31.760 ixDodRuleEngine: match returns False for KeepAnyOf(Replay w/Advanced Stats)
*Debug 06/08 20:21:31.760 ixDodRuleEngine: Checking rule 3.
*Debug 06/08 20:21:31.760 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.760 ixDodRuleEngine: match returns True for KeepAnyOf(TCP CC,TCP CPS,TCP TPUT)
*Debug 06/08 20:21:31.762 ixDodRuleEngine: match returns True for NoneOf(UDP PSTREAM)
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Rule 3 fired.
*Debug 06/08 20:21:31.762 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/ixStackAdapter.tar']
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Now matching for ['Kone', 'TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Checking rule 4.
*Debug 06/08 20:21:31.762 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.762 ixDodRuleEngine: match returns False for NoneOf(UDP PSTREAM,TCP CC,TCP CPS,TCP TPUT)
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Checking rule 5.
*Debug 06/08 20:21:31.762 ixDodRuleEngine: match returns False for KeepAnyOf(UDP PSTREAM)
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Checking rule 6.
*Debug 06/08 20:21:31.762 ixDodRuleEngine: match returns False for TCP Packet Switch
*Debug 06/08 20:21:31.762 ixDodRuleEngine: Checking rule 7.
*Debug 06/08 20:21:31.762 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 8.
*Debug 06/08 20:21:31.763 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 9.
*Debug 06/08 20:21:31.763 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 10.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for KeepAnyOf(kInfoProviderIxDataPubFeature)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 11.
*Debug 06/08 20:21:31.763 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 12.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 13.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 14.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel,Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 15.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 16.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 17.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 18.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: Checking rule 19.
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.763 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.765 Stat Controller: svApplyConfig()
*Debug 06/08 20:21:31.765 ixDodRuleEngine: match returns False for AnyOf(Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 20.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 21.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 22.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 23.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 24.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 25.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 26.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 27.
*Debug 06/08 20:21:31.766 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 28.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.766 ixDodRuleEngine: match returns False for KeepAnyOf(Replay)
*Debug 06/08 20:21:31.766 ixDodRuleEngine: Checking rule 29.
*Debug 06/08 20:21:31.766 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.767 ixDodRuleEngine: Checking rule 30.
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.767 ixDodRuleEngine: Checking rule 31.
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.767 ixDodRuleEngine: Checking rule 32.
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.767 ixDodRuleEngine: Checking rule 33.
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 06/08 20:21:31.767 ixDodRuleEngine: Checking rule 34.
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns True for NoneOf(SSL Kernel)
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.767 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 35.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns True for NoneOf(kInfoProviderIxDataPubFeature)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 36.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for AnyOf(Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 37.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 38.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 39.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns True for NoneOf(Conditional View)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Rule 39 fired.
*Debug 06/08 20:21:31.769 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/koneLib.tar', 'IxLoad_framework_kone.tar', 'Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Now matching for ['TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 40.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 41.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 42.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Rule 42 fired.
*Debug 06/08 20:21:31.769 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Now matching for ['TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.769 ixDodRuleEngine: Checking rule 43.
*Debug 06/08 20:21:31.769 ixDodRuleEngine: match returns False for High Precision
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 44.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for Kone
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 45.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for Conditional View
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 46.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for kInfoProviderIxDataPubFeature
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 47.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for Conditional View
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 48.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for SSL Kernel
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 49.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for kThreadedFeature
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 50.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for TCP CPS
*Debug 06/08 20:21:31.770 ixDodRuleEngine: Checking rule 51.
*Debug 06/08 20:21:31.770 ixDodRuleEngine: match returns False for AnyOf(UDP PSTREAM,TCP TPUT)
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Checking rule 52.
*Debug 06/08 20:21:31.772 ixDodRuleEngine: match returns True for AnyOf(UDP PSTREAM,TCP CC)
*Debug 06/08 20:21:31.772 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Rule 52 fired.
*Debug 06/08 20:21:31.772 ixDodRuleEngine:   Added packages ['../aptixia/components/common/ixTcpStack_cc.tar', '../aptixia/components/common/clockwork.tar']
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Now matching for ['Kone Compatible', 'KSE SSL HTTP']
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Checking rule 53.
*Debug 06/08 20:21:31.772 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Checking rule 54.
*Debug 06/08 20:21:31.772 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Checking rule 55.
*Debug 06/08 20:21:31.772 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 06/08 20:21:31.772 ixDodRuleEngine: Rule 55 fired.
*Debug 06/08 20:21:31.772 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Now matching for ['KSE SSL HTTP']
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Checking rule 56.
*Debug 06/08 20:21:31.773 ixDodRuleEngine: match returns False for Kone
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Checking rule 57.
*Debug 06/08 20:21:31.773 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Checking rule 58.
*Debug 06/08 20:21:31.773 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Checking rule 59.
*Debug 06/08 20:21:31.773 ixDodRuleEngine: match returns False for KSE SSL
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Checking rule 60.
*Debug 06/08 20:21:31.773 ixDodRuleEngine: match returns True for KSE SSL HTTP
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Rule 60 fired.
*Debug 06/08 20:21:31.773 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/libksessl_http.tar']
*Debug 06/08 20:21:31.773 ixDodRuleEngine: No more features to match.
*Debug 06/08 20:21:31.773 ixDodRuleEngine:  Done resolving rules. Features resolve to (initial) DOD packages ['kKseSslHttp']
*Debug 06/08 20:21:31.773 ixDodRuleEngine: Features resolve to DOD package groups: {'kGroupSsl': ['kKseSslHttp'], 'kGroupFramework': ['kFrameworkKone'], 'kGroupStackAdapter': ['kStackAdapter'], 'kGroupStackAdapterType': ['kIxStackAdapter'], 'kGroupKone': ['kKone'], 'kGroupClockwork': ['kClockwork'], 'kGroupFastTcpStack': ['kFastTcpStackCc']} 
*Debug 06/08 20:21:31.773 Traffic Traffic1: getMatchingGlobalPackagesFromRule: returns packageNameList = ['IxLoad_framework_kone.tar', '../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar', 'Plugins/agent/Common/stackAdapter.tar', 'Plugins/agent/Common/ixStackAdapter.tar', 'Plugins/agent/Common/koneLib.tar', 'Plugins/agent/Common/libksessl_http.tar']
*Console 06/08 20:21:31.773 : ++++ [New SSl 0 :  KernSSL 0 : KseSSL 0 : KseSSLHTTP 1 ]
*Debug 06/08 20:21:31.778 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 featureList = {0: True, 1: False, 2: False, 3: True, 4: False, 5: False, 6: False, 7: False, 8: False, 9: False, 10: False}
*Debug 06/08 20:21:31.778 Traffic Traffic1: getMatchingPluginPackagesFromRule featureDict =  {0: 1, 1: 0, 2: 0, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0}
*Debug 06/08 20:21:31.779 Traffic Traffic1: getMatchingPluginPackagesFromRule ruleObj.packageNameMap =  [([0], ('', [])), ([0, 1, 2], ('_profile', [])), ([0, 1], ('_profile', [])), ([0, 1, 4], ('_profile', [])), ([0, 4], ('_pipeline', [])), ([0, 2], ('_maxCR', [])), ([0, 1, 2, 3], ('_quick', [])), ([0, 1, 3], ('_quick', [])), ([0, 2, 3], ('_quick', [])), ([0, 3], ('_quick', [])), ([0, 4, 2], ('_pipeline', [])), ([0, 1, 4, 2], ('_profile', [])), ([0, 9], ('_streaming', [])), ([0, 9, 2], ('_streaming_maxCR', [])), ([0, 6, 2], ('_ce', [])), ([0, 6, 7, 2], ('_ce_md5', [])), ([0, 6, 7, 1, 4, 2], ('_ce_profile', [])), ([0, 5], ('_granular_stats', [])), ([0, 1, 2, 5], ('_profile_granular_stats', [])), ([0, 1, 5], ('_profile_granular_stats', [])), ([0, 1, 4, 5], ('_profile_granular_stats', [])), ([0, 4, 5], ('_pipeline_granular_stats', [])), ([0, 2, 5], ('_maxCR_granular_stats', [])), ([0, 1, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 1, 3, 5], ('_quick_granular_stats', [])), ([0, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 3, 5], ('_quick_granular_stats', [])), ([0, 4, 2, 5], ('_pipeline_granular_stats', [])), ([0, 1, 4, 2, 5], ('_profile_granular_stats', [])), ([0, 9, 5], ('_streaming_granular_stats', [])), ([0, 9, 2, 5], ('_streaming_maxCR_granular_stats', [])), ([0, 6, 5, 2], ('_ce_granular_stats', [])), ([0, 6, 7, 5, 2], ('_ce_md5_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 8], ('_new_ssl', [])), ([0, 8, 5], ('_new_ssl_granular_stats', [])), ([0, 10], ('_consumer_profile', []))]
*Console 06/08 20:21:31.779 : getMatchingPluginPackagesFromRule: returns packageNameList = ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 06/08 20:21:31.779 Traffic Traffic1: getTrafficPackages returns ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 06/08 20:21:31.779 Community Controller: globalPackageList = ['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\IxLoad_framework_kone.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\clockwork.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\ixTcpStack_cc.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\stackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\ixStackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\koneLib.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\libksessl_http.tar'] , packagesList = ['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 06/08 20:21:31.888 ixDodRuleEngine: Starting rule resolution
*Debug 06/08 20:21:31.888 ixDodRuleEngine: Now matching for (['Kone', 'TCP CC', 'KSE SSL HTTP', 'Kone Compatible'])
*Debug 06/08 20:21:31.888 ixDodRuleEngine: Checking rule 0.
*Debug 06/08 20:21:31.888 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.888 ixDodRuleEngine: Checking rule 1.
*Debug 06/08 20:21:31.888 ixDodRuleEngine: match returns False for KSE New SSL
*Debug 06/08 20:21:31.888 ixDodRuleEngine: Checking rule 2.
*Debug 06/08 20:21:31.888 ixDodRuleEngine: match returns False for KeepAnyOf(Replay w/Advanced Stats)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: Checking rule 3.
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns True for KeepAnyOf(TCP CC,TCP CPS,TCP TPUT)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns True for NoneOf(UDP PSTREAM)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: Rule 3 fired.
*Debug 06/08 20:21:31.890 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/ixStackAdapter.tar']
*Debug 06/08 20:21:31.890 ixDodRuleEngine: Now matching for ['Kone', 'TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.890 ixDodRuleEngine: Checking rule 4.
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns False for NoneOf(UDP PSTREAM,TCP CC,TCP CPS,TCP TPUT)
*Debug 06/08 20:21:31.890 ixDodRuleEngine: Checking rule 5.
*Debug 06/08 20:21:31.890 ixDodRuleEngine: match returns False for KeepAnyOf(UDP PSTREAM)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 6.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for TCP Packet Switch
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 7.
*Debug 06/08 20:21:31.891 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 8.
*Debug 06/08 20:21:31.891 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 9.
*Debug 06/08 20:21:31.891 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 10.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for KeepAnyOf(kInfoProviderIxDataPubFeature)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 11.
*Debug 06/08 20:21:31.891 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 12.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 13.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 14.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel,Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 15.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 16.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 17.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.891 ixDodRuleEngine: Checking rule 18.
*Debug 06/08 20:21:31.891 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 19.
*Debug 06/08 20:21:31.892 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.892 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.892 ixDodRuleEngine: match returns False for AnyOf(Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 20.
*Debug 06/08 20:21:31.892 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 21.
*Debug 06/08 20:21:31.892 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 22.
*Debug 06/08 20:21:31.892 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 23.
*Debug 06/08 20:21:31.892 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.892 ixDodRuleEngine: Checking rule 24.
*Debug 06/08 20:21:31.892 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 25.
*Debug 06/08 20:21:31.894 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 26.
*Debug 06/08 20:21:31.894 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 27.
*Debug 06/08 20:21:31.894 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 28.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for KeepAnyOf(Replay)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 29.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 30.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 31.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 32.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 33.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 34.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for NoneOf(SSL Kernel)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 06/08 20:21:31.894 ixDodRuleEngine: Checking rule 35.
*Debug 06/08 20:21:31.894 ixDodRuleEngine: match returns True for NoneOf(kInfoProviderIxDataPubFeature)
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Checking rule 36.
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns False for AnyOf(Replay w/Advanced Stats,Replay)
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Checking rule 37.
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Checking rule 38.
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Checking rule 39.
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns True for Kone
*Debug 06/08 20:21:31.895 ixDodRuleEngine: match returns True for NoneOf(Conditional View)
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Rule 39 fired.
*Debug 06/08 20:21:31.895 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/koneLib.tar', 'IxLoad_framework_kone.tar', 'Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.895 ixDodRuleEngine: Now matching for ['TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 40.
*Debug 06/08 20:21:31.897 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 41.
*Debug 06/08 20:21:31.897 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 42.
*Debug 06/08 20:21:31.897 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Rule 42 fired.
*Debug 06/08 20:21:31.897 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Now matching for ['TCP CC', 'KSE SSL HTTP', 'Kone Compatible']
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 43.
*Debug 06/08 20:21:31.897 ixDodRuleEngine: match returns False for High Precision
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 44.
*Debug 06/08 20:21:31.897 ixDodRuleEngine: match returns False for Kone
*Debug 06/08 20:21:31.897 ixDodRuleEngine: Checking rule 45.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for Conditional View
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 46.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for kInfoProviderIxDataPubFeature
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 47.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for Conditional View
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 48.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for SSL Kernel
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 49.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for kThreadedFeature
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 50.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for TCP CPS
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 51.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for AnyOf(UDP PSTREAM,TCP TPUT)
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 52.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns True for AnyOf(UDP PSTREAM,TCP CC)
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Rule 52 fired.
*Debug 06/08 20:21:31.898 ixDodRuleEngine:   Added packages ['../aptixia/components/common/ixTcpStack_cc.tar', '../aptixia/components/common/clockwork.tar']
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Now matching for ['Kone Compatible', 'KSE SSL HTTP']
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 53.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 54.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 55.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Rule 55 fired.
*Debug 06/08 20:21:31.898 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Now matching for ['KSE SSL HTTP']
*Debug 06/08 20:21:31.898 ixDodRuleEngine: Checking rule 56.
*Debug 06/08 20:21:31.898 ixDodRuleEngine: match returns False for Kone
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Checking rule 57.
*Debug 06/08 20:21:31.900 ixDodRuleEngine: match returns False for Replay
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Checking rule 58.
*Debug 06/08 20:21:31.900 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Checking rule 59.
*Debug 06/08 20:21:31.900 ixDodRuleEngine: match returns False for KSE SSL
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Checking rule 60.
*Debug 06/08 20:21:31.900 ixDodRuleEngine: match returns True for KSE SSL HTTP
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Rule 60 fired.
*Debug 06/08 20:21:31.900 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/libksessl_http.tar']
*Debug 06/08 20:21:31.900 ixDodRuleEngine: No more features to match.
*Debug 06/08 20:21:31.900 ixDodRuleEngine:  Done resolving rules. Features resolve to (initial) DOD packages ['kKseSslHttp']
*Debug 06/08 20:21:31.900 ixDodRuleEngine: Features resolve to DOD package groups: {'kGroupSsl': ['kKseSslHttp'], 'kGroupFramework': ['kFrameworkKone'], 'kGroupStackAdapter': ['kStackAdapter'], 'kGroupStackAdapterType': ['kIxStackAdapter'], 'kGroupKone': ['kKone'], 'kGroupClockwork': ['kClockwork'], 'kGroupFastTcpStack': ['kFastTcpStackCc']} 
*Debug 06/08 20:21:31.901 Traffic Traffic1: getMatchingGlobalPackagesFromRule: returns packageNameList = ['IxLoad_framework_kone.tar', '../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar', 'Plugins/agent/Common/stackAdapter.tar', 'Plugins/agent/Common/ixStackAdapter.tar', 'Plugins/agent/Common/koneLib.tar', 'Plugins/agent/Common/libksessl_http.tar']
*Console 06/08 20:21:31.901 : ++++ [New SSl 0 :  KernSSL 0 : KseSSL 0 : KseSSLHTTP 1 ]
*Debug 06/08 20:21:31.904 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 featureList = {0: True, 1: False, 2: False, 3: True, 4: False, 5: False, 6: False, 7: False, 8: False, 9: False, 10: False}
*Debug 06/08 20:21:31.904 Traffic Traffic1: getMatchingPluginPackagesFromRule featureDict =  {0: 1, 1: 0, 2: 0, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0}
*Debug 06/08 20:21:31.904 Traffic Traffic1: getMatchingPluginPackagesFromRule ruleObj.packageNameMap =  [([0], ('', [])), ([0, 1, 2], ('_profile', [])), ([0, 1], ('_profile', [])), ([0, 1, 4], ('_profile', [])), ([0, 4], ('_pipeline', [])), ([0, 2], ('_maxCR', [])), ([0, 1, 2, 3], ('_quick', [])), ([0, 1, 3], ('_quick', [])), ([0, 2, 3], ('_quick', [])), ([0, 3], ('_quick', [])), ([0, 4, 2], ('_pipeline', [])), ([0, 1, 4, 2], ('_profile', [])), ([0, 9], ('_streaming', [])), ([0, 9, 2], ('_streaming_maxCR', [])), ([0, 6, 2], ('_ce', [])), ([0, 6, 7, 2], ('_ce_md5', [])), ([0, 6, 7, 1, 4, 2], ('_ce_profile', [])), ([0, 5], ('_granular_stats', [])), ([0, 1, 2, 5], ('_profile_granular_stats', [])), ([0, 1, 5], ('_profile_granular_stats', [])), ([0, 1, 4, 5], ('_profile_granular_stats', [])), ([0, 4, 5], ('_pipeline_granular_stats', [])), ([0, 2, 5], ('_maxCR_granular_stats', [])), ([0, 1, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 1, 3, 5], ('_quick_granular_stats', [])), ([0, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 3, 5], ('_quick_granular_stats', [])), ([0, 4, 2, 5], ('_pipeline_granular_stats', [])), ([0, 1, 4, 2, 5], ('_profile_granular_stats', [])), ([0, 9, 5], ('_streaming_granular_stats', [])), ([0, 9, 2, 5], ('_streaming_maxCR_granular_stats', [])), ([0, 6, 5, 2], ('_ce_granular_stats', [])), ([0, 6, 7, 5, 2], ('_ce_md5_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 8], ('_new_ssl', [])), ([0, 8, 5], ('_new_ssl_granular_stats', [])), ([0, 10], ('_consumer_profile', []))]
*Console 06/08 20:21:31.905 : getMatchingPluginPackagesFromRule: returns packageNameList = ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 06/08 20:21:31.905 Traffic Traffic1: getTrafficPackages returns ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 06/08 20:21:31.907 Community Controller: @@@@@@@@@ getTrafficPackages @@@@@@@@@@
*Debug 06/08 20:21:31.907 Community Controller: globalPackageList=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\IxLoad_framework_kone.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\clockwork.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\ixTcpStack_cc.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\stackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\ixStackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\koneLib.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\libksessl_http.tar']
*Debug 06/08 20:21:31.907 Community Controller: packagesList=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 06/08 20:21:31.907 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: @@@@@@@@@ getProfilePackages @@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: profilePackages=[]
*Debug 06/08 20:21:31.911 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: @@@@@@@@@ getFixedProtocolPackages @@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: dod_pkg_list=[]
*Debug 06/08 20:21:31.911 Community Controller: communityPackages=[]
*Debug 06/08 20:21:31.911 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: @@@@@@@@@@@ getCommunityPackages @@@@@@@@@@@@
*Debug 06/08 20:21:31.911 Community Controller: dod_pkg_list=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 06/08 20:21:31.911 Community Controller: communityPackages=['httpClient_quick']
*Debug 06/08 20:21:31.913 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 06/08 20:21:31.920 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.920 IxAnalyzer : Analyzer - AddGroup(Traffic1@Network1 [(1, 1, 9)])...
*Debug 06/08 20:21:31.921 IxAnalyzer : Analyzer - AddGroup() returned: 65537
*Debug 06/08 20:21:31.921 IxAnalyzer : Analyzer - AddCaptureSource(groupId = 65537 displayName=Traffic1@Network1 [(1, 1, 9)])...
*Debug 06/08 20:21:31.924 IxAnalyzer : Analyzer - AddCaptureSource() retuned: 65538
*Debug 06/08 20:21:31.924 IxAnalyzer : setActivityFilter(captureSourceId=65538, activityName=Traffic1@Network1-HTTPClient1, root=Client, protocol=HTTP, pcapFilter=tcp port 80)
*Debug 06/08 20:21:31.926 IxAnalyzer : SetActivityFiltert() RETURNED 0
*Debug 06/08 20:21:31.926 IxAnalyzer : Analyzer - set slice  False;20 for captureSourceId = 65538
*Debug 06/08 20:21:31.927 IxAnalyzer : Analyzer - UpdateCaptureSource(captureSourceId= 65538, displayName=Traffic1@Network1 [Port 1.1.9], groupId = 65537)...
*Debug 06/08 20:21:31.927 IxAnalyzer : Analyzer - UpdateCaptureSource() retuned: 0
*Debug 06/08 20:21:31.927 IxAnalyzer : Analyzer - UpdateCaptureSource(captureSourceId = 65538, groupId = 65537 portIp = 10.0.1.9 chassisIp = 192.168.31.42 cardId = 1 portId = 9)...
*Debug 06/08 20:21:31.928 IxAnalyzer : Analyzer - UpdateCaptureSource() retuned: 0
*Debug 06/08 20:21:31.928 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.928 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 Test Controller: _testStartIxViewCapture()
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 Test Controller: _startIxViewCapture()
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.930 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.931 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:31.931 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Info 06/08 20:21:31.931 Test Controller : Downloading packages 'IxLoad_framework_kone, clockwork, ixTcpStack_cc, stackAdapter, ixStackAdapter, koneLib, libksessl_http, httpClient_quick' for community 'Traffic1@Network1'
*Debug 06/08 20:21:31.933 Test Controller : SmartDownLoadPackages
*Debug 06/08 20:21:38.500 Test Controller : Completed downloading packages 'IxLoad_framework_kone, clockwork, ixTcpStack_cc, stackAdapter, ixStackAdapter, koneLib, libksessl_http, httpClient_quick'
*Debug 06/08 20:21:38.513 Network Network1: Clearing portGroup active port ...
*Debug 06/08 20:21:38.528 Stat Controller: Registering chassis 192.168.31.42
*Debug 06/08 20:21:38.532 Stat Controller: displaySMStats = False
*Info 06/08 20:21:38.533 Test Controller: Starting network Validate Configuration
*Debug 06/08 20:21:38.536 Test Controller : Clear timestamp on the ports - [(1,1,9)]
*Debug 06/08 20:21:38.536 Chassis Chain: Creating chassis chain for ports [(1,1,9)]...
*Debug 06/08 20:21:38.536 Chassis Chain: Adding chassis 192.168.31.42 to chassis chain
*Debug 06/08 20:21:38.575 Chassis Chain: Clearing timestamp on ports [(1,1,9)]
*Info 06/08 20:21:38.651 Network: Port Group (Network1) : Ownership taken
*Debug 06/08 20:21:38.710 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIG INIT', EVENT RECEIVED:  TestController: Entering Configure NetTraffic State
  NEW STATE: 'TestController: CONFIG NETWORK & TRAFFIC', DESCRIPTION: None, DETAILS: None, STATUS: None
*Info 06/08 20:21:39.805 Network: Meshing (Meshing-1) : Validated
*Debug 06/08 20:21:39.805 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: Delay the Watch Dog Timer ; errDescription = None ; details = None; status = None
*Info 06/08 20:21:39.806 Network: MacSessionData : Validated
*Info 06/08 20:21:39.809 Network: IPSecSessionData : Validated
*Info 06/08 20:21:39.809 Network: IxLoadSessionData : Validated
*Debug 06/08 20:21:39.809 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:39.809 Test Controller: event ID received =  TestController: Delay the Watch Dog Timer
*Debug 06/08 20:21:39.809 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Delay the Watch Dog Timer
*Debug 06/08 20:21:39.809 Test Controller: Delaying watchdog timer by 10.6 s
*Debug 06/08 20:21:39.809 Event Scheduler: Stopping the timer: Event Index 1, timer (1496935889.216, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x281032D0>>, (1,))
*Info 06/08 20:21:39.811 Network: Ethernet (Ethernet-1) : Validated
*Debug 06/08 20:21:39.811 Event Scheduler: Delayed event 1 action _configuringTimerExpired from time 1496935889.22 to time 1496935899.81
*Info 06/08 20:21:39.812 Network: IpSessionData : Validated
*Debug 06/08 20:21:39.812 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Delay the Watch Dog Timer
*Info 06/08 20:21:39.812 Network: TCP (TCP-2) : Validated
*Debug 06/08 20:21:39.813 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Info 06/08 20:21:39.815 Network: DNS (DNS-2) : Validated
*Info 06/08 20:21:39.815 Network: Settings (Settings-2) : Validated
*Info 06/08 20:21:39.818 Network: Filter (Filter-1) : Validated
*Info 06/08 20:21:39.838 Network: MAC/VLAN (MAC/VLAN-1) : Validated
*Info 06/08 20:21:39.861 Network: IP (IP-1) : Validated
*Info 06/08 20:21:39.861 Network: GratARP (GratARP-1) : Validated
*Info 06/08 20:21:39.862 Test Controller : Received callback from SM session Validate Config
*Debug 06/08 20:21:39.862 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: StackManager session config validated ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:39.914 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:39.914 Test Controller: event ID received =  TestController: StackManager session config validated
*Debug 06/08 20:21:39.914 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager session config validated
*Info 06/08 20:21:39.915 Test Controller : Starting network configuration
*Info 06/08 20:21:39.915 Test Controller: Network validated successfully
*Info 06/08 20:21:39.917 Test Controller: Async Configure Network on Traffic1@Network1
*Debug 06/08 20:21:39.918 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager session config validated
*Debug 06/08 20:21:39.918 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Info 06/08 20:21:39.921 Network: Network Session : Configuring
*Info 06/08 20:21:39.924 Network: Network Session : Configured
*Debug 06/08 20:21:39.976 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:39.976 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the network
*Debug 06/08 20:21:39.976 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the network
*Debug 06/08 20:21:39.976 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: PREPARING CONFIGURATION  :: Traffic1@Network1 
*Debug 06/08 20:21:39.977 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the network
*Debug 06/08 20:21:39.977 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: PREPARING CONFIGURATION 
*Debug 06/08 20:21:39.977 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING NETWORK  
*Debug 06/08 20:21:39.977 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING NETWORK :: Traffic1@Network1 
*Debug 06/08 20:21:39.979 Network Network1: Spawning IxiaNeigh process on [(1,1,9)] in NetTraffic Traffic1@Network1...
*Debug 06/08 20:21:39.980 [Traffic1@Network1] Port Controller: Starting process ixia_neigh='/bin/ixia_neigh []' on the hosts: None.
*Debug 06/08 20:21:40.79 Community Controller: Applying config for network Network1 ...
*Debug 06/08 20:21:40.99 NetTraffic Traffic1@Network1: fastTcpStack
*Debug 06/08 20:21:40.101 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) subrange 192.168.31.42;1;9: count=1 endpointId=200000 endpointIdIncrement=1 endpointType=IPv4
*Debug 06/08 20:21:40.102 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetRangeDistribution took 0.0, it returned 1 ranges with total endpoint count 1
*Debug 06/08 20:21:40.122 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): IpSubrangeList compactingType = 0x0x3
*Debug 06/08 20:21:40.124 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1)@192.168.31.42;1;9 subrange 0: count=1 intId=200000 intIncr=1 ip=/0 ipIncr= gateway= peer= peerStep= mac=00:0A:35:AD:97:00 macIncr=00:00:00:00:00:01 vlan=-1
*Debug 06/08 20:21:40.125 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetIpSubrangeList took 0.00999999046326, it returned 1 ranges with total IP count 1
*Debug 06/08 20:21:40.138 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: PREPARING CONFIGURATION', EVENT RECEIVED:  Community Controller: Configure the network
  NEW STATE: 'Community Controller: CONFIGURING NETWORK', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:40.138 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:40.140 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the traffic
*Debug 06/08 20:21:40.140 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the traffic
*Debug 06/08 20:21:40.140 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING NETWORK :: Traffic1@Network1 
*Debug 06/08 20:21:40.140 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the traffic
*Debug 06/08 20:21:40.140 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING NETWORK  
*Debug 06/08 20:21:40.140 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 06/08 20:21:40.140 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING NETWORK', EVENT RECEIVED:  Community Controller: Configure the traffic
  NEW STATE: 'Community Controller: CONFIGURING TRAFFIC', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:40.141 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:40.141 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configuring Traffic
*Debug 06/08 20:21:40.141 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configuring Traffic
*Debug 06/08 20:21:40.141 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING TRAFFIC :: Traffic1@Network1 
*Info 06/08 20:21:40.141 Community Controller Traffic1@Network1: Applying traffic configuration for the community Traffic1@Network1
*Debug 06/08 20:21:40.142 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  Community Controller: Community net-traffic configured successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:40.142 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configuring Traffic
*Debug 06/08 20:21:40.142 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 06/08 20:21:40.220 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:40.220 Test Controller: event ID received =  Community Controller: Community net-traffic configured successfully
*Debug 06/08 20:21:40.220 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community net-traffic configured successfully
*Debug 06/08 20:21:40.220 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommConfigured()
*Debug 06/08 20:21:40.220 Test Controller: Communities configured so far: 1 of 1
*Debug 06/08 20:21:40.220 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:40.220 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community net-traffic configured successfully
*Debug 06/08 20:21:40.220 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 06/08 20:21:40.221 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:40.221 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 06/08 20:21:40.221 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:40.221 Test Controller: __checkAllCommConfigured: _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 06/08 20:21:40.223 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: All Communities Configured Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:40.223 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 06/08 20:21:40.223 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 06/08 20:21:40.223 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:40.223 Test Controller: event ID received =  TestController: All Communities Configured Successfully
*Debug 06/08 20:21:40.223 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Configured Successfully
*Debug 06/08 20:21:40.252 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 06/08 20:21:40.252 Test Controller : Updating information for ports - [(1,1,9)]
*Info 06/08 20:21:40.627 Network: Ethernet (Ethernet-1) : Configured
*Debug 06/08 20:21:40.688 Test Controller: joining SV thread...
*Debug 06/08 20:21:40.688 Test Controller: joining SV thread complete!
*Debug 06/08 20:21:40.709 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Configured Successfully
*Debug 06/08 20:21:40.710 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 06/08 20:21:40.710 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 06/08 20:21:40.710 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:40.710 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:21:40.710 Test Controller:  PUBLISHING STATE : [ TestController: CONFIGURE TRAFFIC DESTINATIONS  ]
*Debug 06/08 20:21:40.710 Test Controller: **********************************************************************************************
*Debug 06/08 20:21:40.710 Test Controller : ixRunStateHandler received event  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 06/08 20:21:40.730 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE TRAFFIC DESTINATIONS
*Debug 06/08 20:21:40.739 Test Controller: Total number of communities for this test: 1
*Debug 06/08 20:21:40.769 Port Event Viewer: PortEventHandler enabled on [] but disabled on ['']
*Debug 06/08 20:21:40.792 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIG NETWORK & TRAFFIC', EVENT RECEIVED:  TestController: All Communities Configured Successfully
  NEW STATE: 'TestController: CONFIGURE TRAFFIC DESTINATIONS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:40.844 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:40.844 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the traffic destinations
*Debug 06/08 20:21:40.844 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the traffic destinations
*Debug 06/08 20:21:40.844 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING TRAFFIC :: Traffic1@Network1 
*Debug 06/08 20:21:40.845 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the traffic destinations
*Debug 06/08 20:21:40.845 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 06/08 20:21:40.845 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING DESTINATIONS  
*Debug 06/08 20:21:40.845 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING DESTINATIONS :: Traffic1@Network1 
*Debug 06/08 20:21:40.846 [Traffic1@Network1] Port Controller: copying 394 of file C:/Program Files (x86)/Ixia/IxLoad/8.10-EA/PCPU_DEBUG_CONFIG.xml from position 0 of 394
*Debug 06/08 20:21:40.947 Community Controller: NettrafficFetaures is not multicore on Net-Traffic 'Traffic1@Network1'.
*Debug 06/08 20:21:40.947 Community Controller: KSE Process args: ['-d']
*Debug 06/08 20:21:40.948 [Traffic1@Network1] Port Controller: Starting process kse_[(1,1,9)]='/bin/sh ['/bin/spawn_kse.sh', 'kse', '-d']' on the hosts: [(1,1,9)].
*Debug 06/08 20:21:41.49 Community Controller: **** Apply Activity Configuration for the community: Traffic1@Network1
*Debug 06/08 20:21:41.55 NetTraffic Traffic1@Network1: Configuring Activity
*Debug 06/08 20:21:41.59 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,9)]
*Debug 06/08 20:21:41.62 Traffic Traffic1: Available memory from card 2060409956.
*Debug 06/08 20:21:41.62 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:41.62 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.62 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:41.63 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.63 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 06/08 20:21:41.65 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                     TCP Ports requirement:
                                     UsersPerIP: 20000 UsersPerPort: 20000 TcpPortsPerUser: 3 Ports required = 0.930060
*Debug 06/08 20:21:41.66 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                   UDP Ports requirement:
                                   UsersPerIP: 20000 UsersPerPort: 20000 UdpPortsPerUser: 0 Ports required = 0.000000
*Debug 06/08 20:21:41.68 *PCU*: Traffic1@Network1: HTTPClient1: Ports required for memory 0.93005952381, tcp/udp dominance 1
*Debug 06/08 20:21:41.86 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 06/08 20:21:41.92 *PCU*: Traffic1@Network1: HTTPClient1: Objective Performance is 0.0 for objective simulatedUsers cardFamily acceleron-np configId IxStack:
*Debug 06/08 20:21:41.95 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 06/08 20:21:41.95 *PCU*: Traffic1@Network1: HTTPClient1: Ports requirement for agent specified max is 0, objectiveValue 20000, maxObjectiveFromObjectivePerformance 0.0, usingMaxAllowedObjective 0,
*Debug 06/08 20:21:41.95 Traffic Traffic1: Available memory from card 2060409956.
*Debug 06/08 20:21:41.96 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:41.96 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.96 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:41.96 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.98 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 06/08 20:21:41.108 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 06/08 20:21:41.109 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 06/08 20:21:41.112 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 06/08 20:21:41.112 NetTraffic Traffic1@Network1: Ramp up value for activity 'HTTPClient1' on port (1,1,9) is 1
*Debug 06/08 20:21:41.112 NetTraffic Traffic1@Network1: Ramp down value for activity 'HTTPClient1' on port (1,1,9) is 0
*Debug 06/08 20:21:41.114 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,9)]
*Debug 06/08 20:21:41.115 Traffic Traffic1: Available memory from card 2060409956.
*Debug 06/08 20:21:41.115 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:41.115 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.115 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:21:41.115 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 06/08 20:21:41.115 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 06/08 20:21:41.118 Community Controller: Attempting to put local protocol script files on ports...
*Debug 06/08 20:21:41.118 [Traffic1@Network1] Port Controller: copying 860 of file C:\Users\Vinoy\AppData\Local\Temp\Ixia\IxLoad\8.10.0.300\tmp2\Timeline1.xml from position 0 of 860
*Debug 06/08 20:21:41.219 Community Controller: Sucessfully put local protocol script files on ports [(1,1,9)]
*Debug 06/08 20:21:41.219 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,9)]
*Debug 06/08 20:21:41.220 NetTraffic Traffic1@Network1: Reporting feature used...
*Debug 06/08 20:21:41.223 [Traffic1@Network1] Port Controller: Establish TCP connection to '127.0.0.1:1012' on the hosts: '[(1,1,9)]'.Channel name is 'Global'
*Debug 06/08 20:21:41.249 [Traffic1@Network1] Port Controller: SIGCHLD[kse_[(1,1,9)] on host (1,1,9)] signal=0, exit=0, uid=1496933500948
*Debug 06/08 20:21:41.249 [Traffic1@Network1] Port Controller: Connection 'kse_[(1,1,9)]' was not active on (1,1,9): Removing from list
*Debug 06/08 20:21:41.249 [Traffic1@Network1] Port Controller: Deleting channel 'kse_[(1,1,9)]'from the connection map.
*Debug 06/08 20:21:41.523 [Traffic1@Network1] Port Controller: Sucessfully established connection to '127.0.0.1:1012'
*Debug 06/08 20:21:41.523 Community Controller: Kse heartbeat is initialized, timeout is 90.
*Debug 06/08 20:21:41.525 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING TRAFFIC', EVENT RECEIVED:  Community Controller: Configure the traffic destinations
  NEW STATE: 'Community Controller: CONFIGURING DESTINATIONS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:41.525 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:41.525 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configuration Applied
*Debug 06/08 20:21:41.526 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configuration Applied
*Debug 06/08 20:21:41.526 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING DESTINATIONS :: Traffic1@Network1 
*Debug 06/08 20:21:41.526 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configuration Applied
*Debug 06/08 20:21:41.526 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING DESTINATIONS  
*Debug 06/08 20:21:41.526 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: Community  Caching  
*Debug 06/08 20:21:41.528 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: COMMUNITY CACHING :: Traffic1@Network1 
*Debug 06/08 20:21:41.528 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING DESTINATIONS', EVENT RECEIVED:  Community Controller: Configuration Applied
  NEW STATE: 'Community Controller: Community  Caching', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:41.529 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:41.529 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 06/08 20:21:41.529 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 06/08 20:21:41.529 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 3 methods 
*Console 06/08 20:21:41.529 : We are caching on <function getKseGlobalChannelMessage at 0x0E7FAF70>
*Debug 06/08 20:21:41.530 Network Network1: Using subrangeInfo ranges to send ranges on port
*Debug 06/08 20:21:41.535 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:41.536 Community Controller: NettrafficFetaures is not multicore on Net-Traffic 'Traffic1@Network1'.
*Debug 06/08 20:21:41.536 Community Controller: kseProcessType=2, numSlaves=0, numCoresSkip=0, numNics=1
*Debug 06/08 20:21:41.536 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 06/08 20:21:41.536 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 06/08 20:21:41.538 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:41.538 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 06/08 20:21:41.538 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 06/08 20:21:41.538 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 2 methods 
*Console 06/08 20:21:41.539 : We are caching on <function getPcpuConfigForPort at 0x0E6F12B0>
*Debug 06/08 20:21:41.543 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER ACTIVE CONNECTION
*Console 06/08 20:21:41.545 : mem per active connection = 8150
*Debug 06/08 20:21:41.546 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER REQUEST
*Debug 06/08 20:21:41.546 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER IDLE CONNECTION
*Debug 06/08 20:21:41.546 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER ACTIVE SSL CONNECTION
*Console 06/08 20:21:41.555 : mem per active connection = 61720
*Debug 06/08 20:21:41.555 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER IDLE SSL CONNECTION
*Debug 06/08 20:21:41.569 Activity HTTPClient1: The Memory Limits: Available Memory = 2062643414, Memory Per Active Connection = 8150, Memory Per Idle Connection = 1300, Memory Per Active SSL Connection = 61720, Memory Per Idle SSL Connection = 50000. Memory Per Request = 0.
*Debug 06/08 20:21:41.569 Activity HTTPClient1: urlLineCount = 2, kMaxNumberOfUrlLines = 16000, kMaxNumberOfUrlLinesWOCookies = 32000.

*Debug 06/08 20:21:41.578 Activity HTTPClient1: Attempting to put local protocol script files on ports...
*Debug 06/08 20:21:41.578 [Traffic1@Network1] Port Controller: copying 895 of file C:\Users\Vinoy\AppData\Local\Temp\Ixia\IxLoad\8.10.0.300\tmp2\Traffic1@Network1_HTTPClient1Script_1.kse192.168.31.42109 from position 0 of 895
*Debug 06/08 20:21:41.678 Activity HTTPClient1: Sucessfully put local protocol script files on port (1,1,9)
*Debug 06/08 20:21:41.678 Activity HTTPClient1: For flow HTTPClient1, returning apnId = -1
*Debug 06/08 20:21:41.680 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 06/08 20:21:41.680 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 06/08 20:21:41.680 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:41.681 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 06/08 20:21:41.681 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 06/08 20:21:41.681 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 1 methods 
*Console 06/08 20:21:41.681 : We are caching on <function getDestinationsIpCount at 0x0E75C530>
*Debug 06/08 20:21:41.687 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 06/08 20:21:41.687 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 06/08 20:21:41.687 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:41.687 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 06/08 20:21:41.687 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 06/08 20:21:41.687 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 0 methods 
*Debug 06/08 20:21:41.687 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 06/08 20:21:41.688 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Info 06/08 20:21:41.782 Network: IP (IP-1) : Partially Configured
*Info 06/08 20:21:41.790 Network: TCP (TCP-2) : Configured statistics
*Info 06/08 20:21:41.792 Network: Filter (Filter-1) : Configured statistics
*Info 06/08 20:21:41.792 Network: DNS (DNS-2) : Configured statistics
*Info 06/08 20:21:41.793 Network: MAC/VLAN (MAC/VLAN-1) : Configured statistics
*Info 06/08 20:21:41.795 Network: IPSecSessionData : Configured
*Info 06/08 20:21:41.802 Network: Meshing (Meshing-1) : Configured
*Info 06/08 20:21:41.802 Network: GratARP (GratARP-1) : Configured
*Debug 06/08 20:21:41.802 Test Controller : Received callback from SM session ApplyConfig
*Debug 06/08 20:21:41.803 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: StackManager session configured successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:41.892 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:41.892 Test Controller: event ID received =  TestController: StackManager session configured successfully
*Debug 06/08 20:21:41.892 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager session configured successfully
*Debug 06/08 20:21:41.894 Network Network1: Dynamic control plane is inactive for network Network1
*Debug 06/08 20:21:41.894 Test: No DCP stat paths found.
*Debug 06/08 20:21:41.894 Test Controller: INVOKING LAYER 7
*Debug 06/08 20:21:41.894 Test Controller : INVOKING ENABLE LAYER 7
*Debug 06/08 20:21:41.895 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager session configured successfully
*Debug 06/08 20:21:41.895 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Info 06/08 20:21:41.901 Network: IP (IP-1) : Negotiated
*Info 06/08 20:21:42.109 Network: GratARP (GratARP-1) : Configured
*Info 06/08 20:21:42.134 Network: Port Group (Network1) : Layer 7 Enabled
*Info 06/08 20:21:42.135 Network: OK - Meshing (Meshing-1) : Enabling Traffic
*Info 06/08 20:21:42.361 Network: Meshing (Meshing-1) : Traffic Enabled
*Debug 06/08 20:21:42.361 Test Controller : received EnableLayer7 callback from SM
*Debug 06/08 20:21:42.364 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: StackManager network configured successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:21:42.395 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:21:42.395 Test Controller: event ID received =  TestController: StackManager network configured successfully
*Debug 06/08 20:21:42.395 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager network configured successfully
*Info 06/08 20:21:42.397 Test Controller: Network configured successfully
*Debug 06/08 20:21:42.420 Stat Controller: configSvAfterTestConfigured testEnvelopeChanged = True
*Debug 06/08 20:21:42.420 Stat Controller: setConditionAndDrillDownMap start
*Debug 06/08 20:21:42.434 Stat Controller: conditionalViewEnabled=False
*Debug 06/08 20:21:42.436 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 06/08 20:21:42.437 Stat Controller: addNetworkTraffics - Activity HTTPClient1 statSource HTTP Client Per URL is added to map
*Debug 06/08 20:21:42.438 Stat Controller: addNetworkTraffics - Activity HTTPClient1 statSource HTTP Client is added to map
*Debug 06/08 20:21:42.441 Stat Controller: addNetworkTraffics - Port 192.168.31.42/Card1/Port9 is added to activity HTTPClient1 map
*Debug 06/08 20:21:42.443 Stat Controller: addNetworkTraffics - Activity HTTPClient1 is added to map
*Debug 06/08 20:21:42.448 Stat Controller: SetPerSessionTable statSource='PerSubscriber' mapId=u'IxLoad.PerSubscriber' mapStatus=1 mapType=u'IxLoad.PerSubscriber'
*Debug 06/08 20:21:42.466 Stat Controller: DONE setting perSessionTable for statSource=PerSubscriber
*Debug 06/08 20:21:42.466 Stat Controller: setConditionAndDrillDownMap finish
*Debug 06/08 20:21:42.467 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager network configured successfully
*Debug 06/08 20:21:42.467 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 06/08 20:21:42.489 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:42.489 Community Controller Traffic1@Network1: event ID received =  Community Controller: StackManager Configured
*Debug 06/08 20:21:42.489 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: StackManager Configured
*Debug 06/08 20:21:42.489 Community Controller Traffic1@Network1: _TransActionStackManagerConfigured for the community Traffic1@Network1
*Debug 06/08 20:21:42.490 [Traffic1@Network1] Port Controller: Starting process ixload_set_params.sh='/bin/sh ['/bin/ixload_set_params.sh']' on the hosts: [(1,1,9)].
*Debug 06/08 20:21:42.601 Network Network1: Traffic1@Network1 - Network Applyconfig timeout is 600
*Debug 06/08 20:21:42.601 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 06/08 20:21:42.601 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: COMMUNITY CACHING :: Traffic1@Network1 
*Debug 06/08 20:21:42.601 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: StackManager Configured
*Debug 06/08 20:21:42.601 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: Community  Caching  
*Debug 06/08 20:21:42.601 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:21:42.601 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: Configuring Activities  :: Traffic1@Network1 
*Debug 06/08 20:21:42.601 Community Controller: Computing gc_thresh value for agent HTTPClient1 in traffic Traffic1.
*Debug 06/08 20:21:42.602 Community Controller: [Client-GC_THRESH DEBUG] Calculated gc_threash value for agent HTTPClient1 in traffic Traffic1 for port (1,1,9) is 1.
*Debug 06/08 20:21:42.602 Community Controller: [Client-GC_THRESH DEBUG] Calculated gc_threash value for agent HTTPClient1 in traffic Traffic1 for port (1,1,9) is 1.
*Debug 06/08 20:21:42.615 [Traffic1@Network1] Port Controller: SIGCHLD[ixload_set_params.sh on host (1,1,9)] signal=0, exit=0, uid=1496933502489
*Debug 06/08 20:21:42.615 [Traffic1@Network1] Port Controller: Connection 'ixload_set_params.sh' was not active on (1,1,9): Removing from list
*Debug 06/08 20:21:42.615 [Traffic1@Network1] Port Controller: Deleting channel 'ixload_set_params.sh'from the connection map.
*Debug 06/08 20:21:42.903 [Traffic1@Network1] Port Controller: (1,1,9): setGcThresh: values set: gc_thresh2 = 4; gc_thresh3 = 500004
*Console 06/08 20:21:43.42 : We are returning from cache <function getKseGlobalChannelMessage at 0x0E7FAF70>
*Debug 06/08 20:21:43.43 ixKseCommunicator Global: Sending on ports [(1,1,9)]:'<ixlagent-configure-request request-id="1496933501" activityName="Global" port-id="0"><port-information>
<chassis-id>1</chassis-id>
<card-id>1</card-id>
<port-num>9</port-num>
<nic-num>1</nic-num>
<active-port>-1</active-port>
</port-information>

<lan>
    <ip-overlapping-status>0</ip-overlapping-status>
    <parallel_session_initiation_in_dcp_mode>0</parallel_session_initiation_in_dcp_mode>
    <gratuitous-arp>1</gratuitous-arp>
    
<TcpParams>
    <rxBufSize>4096</rxBufSize>
    <txBufSize>4096</txBufSize>
    <finTimeout>60</finTimeout>
    <synRetries>5</synRetries>
    <synAckRetries>5</synAckRetries>
    <retransmitRetries>5</retransmitRetries>
</TcpParams>

    <ranges>
        
<range>
    <node-type>3</node-type>
    <dcp-status>0</dcp-status>
    <ps-core>0</ps-core>
    <layer-name>aptixia-T.a28b3037.14c1.46c3.af87.edadb0190670-L2EthernetPlugin-cded14a2.72c4.43fe.a404.31189175af24-192.168.31.42;1;9default</layer-name>
    <mac-layer-name>aptixia-T.a28b3037.14c1.46c3.af87.edadb0190670-L2EthernetPlugin-cded14a2.72c4.43fe.a404.31189175af24-192.168.31.42;1;9default</mac-layer-name>
    <node>200000</node>
    <node-step>1</node-step>
    <node-count>1</node-count>
    <mss>1460</mss>
    <ipSourcePortFrom>1024</ipSourcePortFrom>
    <ipSourcePortTo>65535</ipSourcePortTo>
    
</range>

    </ranges>
    
</lan>
<granular-stat-type>0</granular-stat-type><subscriber-mode>0</subscriber-mode><num-slaves>0</num-slaves><num-cores-skip>0</num-cores-skip><num-nics>1</num-nics>
<dsr-hook-configuration/>
</ixlagent-configure-request>'.
*Debug 06/08 20:21:43.45 Community Controller: Port Id 192.168.31.42;1;9 timer added.
*Debug 06/08 20:21:43.45 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: Community  Caching', EVENT RECEIVED:  Community Controller: StackManager Configured
  NEW STATE: 'Community Controller: CONFIGURING Activities', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:21:43.66 ixKseCommunicator Global: Got from port (1,1,9): '<ixlagent-configure-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:21:43.68 ixKseCommunicator Global: Handling ixlagent message from port (1,1,9): '<ixlagent-configure-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:21:43.68 Traffic1@Network1: Traffic1@Network1: got response for requestType configure on port 0
*Debug 06/08 20:21:43.68 Community Controller: Port Id 192.168.31.42;1;9 task done.
*Debug 06/08 20:21:43.144 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:43.144 Community Controller Traffic1@Network1: event ID received =  Community Controller: Global Config Response Received
*Debug 06/08 20:21:43.144 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Global Config Response Received
*Debug 06/08 20:21:43.155 [Traffic1@Network1] Port Controller: Establish TCP connection to '127.0.0.1:1012' on the hosts: '[(1,1,9)]'.Channel name is 'HTTPClient1'
*Debug 06/08 20:21:43.456 [Traffic1@Network1] Port Controller: Sucessfully established connection to '127.0.0.1:1012'
*Debug 06/08 20:21:43.467 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Unconfigured'
*Debug 06/08 20:21:43.470 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'null' to 'Unconfigured' after handling event 'null'
*Debug 06/08 20:21:43.474 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'Configure Request' in state 'Unconfigured'
*Debug 06/08 20:21:43.476 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Global Config Response Received
*Debug 06/08 20:21:43.476 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:21:43.480 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'Configure Request' in  state 'Unconfigured'
*Debug 06/08 20:21:43.483 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Unconfigured'
*Debug 06/08 20:21:43.483 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=SendConfigRequest guard=null' in state 'Unconfigured'
*Console 06/08 20:21:43.486 : We are returning from cache <function getPcpuConfigForPort at 0x0E6F12B0>
*Debug 06/08 20:21:43.487 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,9)]:'<ixlagent-configure-request request-id="1496933503" activityName="HTTPClient1" port-id="0"><flows><http><name>HTTPClient1</name><agentUniqueID>0</agentUniqueID><apnID>-1</apnID><script>/tmp/port1/HTTPClient1Script_1.kse</script></http></flows><constraints/><memory><availableMemory>2057523670</availableMemory><maxDynamicMemPerConn>6850</maxDynamicMemPerConn><maxIdleMem>1300</maxIdleMem></memory><using-kone>1</using-kone><user-ip-rule>1-TO-1</user-ip-rule><destination-ip-rule>Consecutive</destination-ip-rule><destination-blowup-rule>ConfigTime-Blowup</destination-blowup-rule><random-seed>0</random-seed></ixlagent-configure-request>'.
*Debug 06/08 20:21:43.489 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'Configure Request' Result='Handled' in state 'Unconfigured'
*Debug 06/08 20:21:43.489 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Configure Request'
*Debug 06/08 20:21:43.490 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STARTING TIMER-- for state'Configure Request'
*Debug 06/08 20:21:43.490 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Unconfigured' to 'Configure Request' after handling event 'Configure Request'
*Debug 06/08 20:21:44.628 ixKseCommunicator HTTPClient1: Got from port (1,1,9): '<ixlagent-configure-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:21:44.628 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,9): '<ixlagent-configure-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:21:44.630 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'Configure Response' in state 'Configure Request'
*Debug 06/08 20:21:44.630 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'Configure Response' in  state 'Configure Request'
*Debug 06/08 20:21:44.630 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STOPPING TIMER-- for state'Configure Request'
*Debug 06/08 20:21:44.631 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Configure Request'
*Debug 06/08 20:21:44.631 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Configure Request'
*Console 06/08 20:21:44.631 : objectiveType Simulated Users
*Debug 06/08 20:21:44.632 Activity HTTPClient1: objective value for objective type: 'throughputKBps' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 06/08 20:21:44.632 : objectiveType Simulated Users
*Debug 06/08 20:21:44.634 Activity HTTPClient1: objective value for objective type: 'connectionRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 06/08 20:21:44.634 : objectiveType Simulated Users
*Debug 06/08 20:21:44.635 Activity HTTPClient1: objective value for objective type: 'transactionRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 06/08 20:21:44.637 : objectiveType Simulated Users
*Debug 06/08 20:21:44.638 Activity HTTPClient1: objective value for objective type: 'packetTxRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 06/08 20:21:44.638 : objectiveType Simulated Users
*Console 06/08 20:21:44.638 : tpsVal -1, cpsVal -1
*Debug 06/08 20:21:44.638 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,9)]:'<ixlagent-set-objective-request request-id="1496933503" activityName="HTTPClient1" port-id="0"><run-parameters type="ClientRunParameters"><disableTimeline>0</disableTimeline><totalNumberOfIterations>1</totalNumberOfIterations><duration>-1</duration><portId>0</portId><portCount>1</portCount><maxNumberOfUsers>21504</maxNumberOfUsers><objective type="simulatedUsersCurve"><fileName>/tmp/Timeline1.xml</fileName><scaleFactor>20000.0</scaleFactor><maxobjectives><connectionRate>-1</connectionRate><transactionRate>-1</transactionRate><throughputKBps>-1</throughputKBps><packetTxRate>-1</packetTxRate></maxobjectives><flowDistribution><flowObjective><flowName>HTTPClient1</flowName><percentage>10000</percentage></flowObjective></flowDistribution><timerGranularity>-1</timerGranularity></objective><rampDown>10</rampDown><rampDownValue>0</rampDownValue></run-parameters></ixlagent-set-objective-request>'.
*Debug 06/08 20:21:44.638 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'Configure Response' Result='Handled' in state 'Configure Request'
*Debug 06/08 20:21:44.638 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Set Objective Request'
*Debug 06/08 20:21:44.638 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STARTING TIMER-- for state'Set Objective Request'
*Debug 06/08 20:21:44.640 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Configure Request' to 'Set Objective Request' after handling event 'Configure Response'
*Debug 06/08 20:21:44.688 ixKseCommunicator HTTPClient1: Got from port (1,1,9): '<ixlagent-set-objective-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:21:44.688 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,9): '<ixlagent-set-objective-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:21:44.690 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'SetObj Response' in state 'Set Objective Request'
*Debug 06/08 20:21:44.690 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'SetObj Response' in  state 'Set Objective Request'
*Debug 06/08 20:21:44.690 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STOPPING TIMER-- for state'Set Objective Request'
*Debug 06/08 20:21:44.690 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Set Objective Request'
*Debug 06/08 20:21:44.691 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Set Objective Request'
*Debug 06/08 20:21:44.691 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'SetObj Response' Result='Handled' in state 'Set Objective Request'
*Debug 06/08 20:21:44.691 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Configured'
*Debug 06/08 20:21:44.691 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Set Objective Request' to 'Configured' after handling event 'SetObj Response'
*Debug 06/08 20:21:44.776 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:44.776 Community Controller Traffic1@Network1: event ID received =  Community Controller: Activity Configured
*Debug 06/08 20:21:44.776 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Activity Configured
*Debug 06/08 20:21:44.776 Community Controller Traffic1@Network1: Activities Configured Successfully for the community: Traffic1@Network1
*Debug 06/08 20:21:44.776 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Activity Configured
*Debug 06/08 20:21:44.776 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:21:44.778 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:21:44.778 Community Controller Traffic1@Network1: event ID received =  Community Controller: Send Global Config Complete Request
*Debug 06/08 20:21:44.778 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Send Global Config Complete Request
*Debug 06/08 20:21:44.778 ixKseCommunicator Global: Sending on ports [(1,1,9)]:'<ixlagent-complete-configuration-request request-id="1496933501" activityName="Global" port-id="0"/>'.
*Debug 06/08 20:21:44.778 Community Controller: Port Id 192.168.31.42;1;9 timer added.
*Debug 06/08 20:21:44.778 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Send Global Config Complete Request
*Debug 06/08 20:21:44.778 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:21:46.641 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933506.64.
*Debug 06/08 20:21:48.740 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933508.74.
*Debug 06/08 20:21:50.841 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933510.84.
*Debug 06/08 20:21:52.900 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933512.9.
*Debug 06/08 20:21:55.0 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933515.0.
*Debug 06/08 20:21:57.99 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933517.1.
*Debug 06/08 20:21:59.200 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933519.2.
*Debug 06/08 20:22:01.299 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933521.3.
*Debug 06/08 20:22:03.400 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933523.4.
*Debug 06/08 20:22:04.960 ixKseCommunicator Global: Got from port (1,1,9): '<keep-alive request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:04.960 ixKseCommunicator Global: Handling heartBeat message from port (1,1,9): '<keep-alive request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:04.961 Community Controller: Port Id 192.168.31.42;1;9 timer not updated because initial timer did not reach the threshold.
*Debug 06/08 20:22:05.463 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933525.46.
*Debug 06/08 20:22:07.562 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933527.56.
*Debug 06/08 20:22:09.663 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933529.66.
*Debug 06/08 20:22:11.763 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933531.76.
*Debug 06/08 20:22:13.861 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933533.86.
*Debug 06/08 20:22:15.960 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933535.96.
*Debug 06/08 20:22:18.61 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933538.06.
*Debug 06/08 20:22:20.161 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933540.16.
*Debug 06/08 20:22:22.260 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933542.26.
*Debug 06/08 20:22:24.361 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933544.36.
*Debug 06/08 20:22:25.963 ixKseCommunicator Global: Got from port (1,1,9): '<keep-alive request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:25.963 ixKseCommunicator Global: Handling heartBeat message from port (1,1,9): '<keep-alive request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:25.964 Community Controller: Port Id 192.168.31.42;1;9 timer not updated because initial timer did not reach the threshold.
*Debug 06/08 20:22:26.415 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933546.42.
*Debug 06/08 20:22:28.516 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933548.52.
*Debug 06/08 20:22:30.615 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933550.62.
*Debug 06/08 20:22:32.713 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933552.71.
*Debug 06/08 20:22:34.813 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933554.81.
*Debug 06/08 20:22:36.914 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933556.91.
*Debug 06/08 20:22:39.13 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933559.01.
*Debug 06/08 20:22:41.114 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933561.11.
*Debug 06/08 20:22:43.213 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;9, port time: 1496933504.78, current time 1496933563.21.
*Debug 06/08 20:22:44.848 ixKseCommunicator Global: Got from port (1,1,9): '<ixlagent-complete-configuration-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:44.848 ixKseCommunicator Global: Handling ixlagent message from port (1,1,9): '<ixlagent-complete-configuration-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:44.848 Traffic1@Network1: Traffic1@Network1: got response for requestType complete-configuration on port 0
*Debug 06/08 20:22:44.848 Community Controller: Port Id 192.168.31.42;1;9 task done.
*Debug 06/08 20:22:44.880 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:44.880 Community Controller Traffic1@Network1: event ID received =  Community Controller: Community traffic destinations configured successfully
*Debug 06/08 20:22:44.880 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Community traffic destinations configured successfully
*Debug 06/08 20:22:44.881 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Community traffic destinations configured successfully
*Debug 06/08 20:22:44.881 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:22:44.881 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:44.881 Community Controller Traffic1@Network1: event ID received =  Community Controller: Networks updated
*Debug 06/08 20:22:44.881 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Networks updated
*Debug 06/08 20:22:44.881 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING ACTIVITIES :: Traffic1@Network1 
*Debug 06/08 20:22:44.881 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  Community Controller: Community traffic activities configured successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:44.882 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Networks updated
*Debug 06/08 20:22:44.882 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING Activities  
*Debug 06/08 20:22:44.882 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: Wait For InfoProvider
*Debug 06/08 20:22:44.884 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING Activities', EVENT RECEIVED:  Community Controller: Networks updated
  NEW STATE: 'Community Controller: Wait For InfoProvider', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:44.884 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:44.884 Community Controller Traffic1@Network1: event ID received =  Community Controller: InfoProvider Configured
*Debug 06/08 20:22:44.884 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: InfoProvider Configured
*Debug 06/08 20:22:44.884 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: WaitForInfoProvider :: Traffic1@Network1 
*Debug 06/08 20:22:44.884 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: InfoProvider Configured
*Debug 06/08 20:22:44.884 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: Wait For InfoProvider
*Debug 06/08 20:22:44.885 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURED           
*Debug 06/08 20:22:44.885 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURED  :: Traffic1@Network1 
*Debug 06/08 20:22:44.885 Community Controller: Clearing cache on Traffic1@Network1
*Debug 06/08 20:22:44.885 Community Controller: Community cache cleared on Traffic1@Network1 .
*Debug 06/08 20:22:44.887 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: Wait For InfoProvider', EVENT RECEIVED:  Community Controller: InfoProvider Configured
  NEW STATE: 'Community Controller: CONFIGURED', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:44.967 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:44.967 Test Controller: event ID received =  Community Controller: Community traffic activities configured successfully
*Debug 06/08 20:22:44.967 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community traffic activities configured successfully
*Debug 06/08 20:22:44.967 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommDestinationsConfigured()
*Debug 06/08 20:22:44.967 Test Controller: Configured destinations for 1 of 1 communities
*Debug 06/08 20:22:44.969 Port Event Viewer: PortEventHandler enabled on [] but disabled on ['']
*Debug 06/08 20:22:44.969 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: All Communities Destinations Configured Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:44.969 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community traffic activities configured successfully
*Debug 06/08 20:22:44.969 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 06/08 20:22:44.970 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:44.970 Test Controller: event ID received =  TestController: All Communities Destinations Configured Successfully
*Debug 06/08 20:22:44.970 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Destinations Configured Successfully
*Debug 06/08 20:22:45.173 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIGURE TRAFFIC DESTINATIONS
*Debug 06/08 20:22:45.188 Stat Controller: configSvAfterTestConfigured testEnvelopeChanged = False
*Debug 06/08 20:22:45.210 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Destinations Configured Successfully
*Debug 06/08 20:22:45.210 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 06/08 20:22:45.210 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: FINAL CONFIGURATION             
*Debug 06/08 20:22:45.210 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:45.210 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:45.210 Test Controller:  PUBLISHING STATE : [ TestController: FINAL CONFIGURATION             ]
*Debug 06/08 20:22:45.210 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:45.211 Test Controller : ixRunStateHandler received event  TestController: FINAL CONFIGURATION             
*Debug 06/08 20:22:45.233 Test Controller: Test Controller FSM: ENTRY Action for the State: FINAL CONFIGURATION
*Debug 06/08 20:22:45.233 Test Controller: self._gatewayArpRequired= False
*Debug 06/08 20:22:45.233 Test Controller: testName = Test1 ; stateName =  TestController: FINAL CONFIGURATION             ; eventId =  TestController: Configuration Finalized Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:45.255 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIGURE TRAFFIC DESTINATIONS', EVENT RECEIVED:  TestController: All Communities Destinations Configured Successfully
  NEW STATE: 'TestController: FINAL CONFIGURATION', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:45.255 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:45.256 Test Controller: event ID received =  TestController: Configuration Finalized Successfully
*Debug 06/08 20:22:45.256 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Configuration Finalized Successfully
*Debug 06/08 20:22:45.256 Test Controller: Test Controller FSM: Internal Transition Action: configurationCompleted()
*Debug 06/08 20:22:45.256 Test Controller: [ Stopping the Configuring Watch Dog Timer. ] Timer ID = 1
*Debug 06/08 20:22:45.256 Event Scheduler: REMOVE Event(). Removing Event Index 1
*Debug 06/08 20:22:45.256 Event Scheduler: Stopping the timer: Event Index 1, timer (1496935899.8060002, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x281032D0>>, (1,))
*Debug 06/08 20:22:45.256 Event Scheduler: deleting the event 1
*Debug 06/08 20:22:45.259 Stat Controller: Stat Manager RefreshQueryEngineProfile
*Debug 06/08 20:22:45.298 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Configuration Finalized Successfully
*Debug 06/08 20:22:45.299 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: FINAL CONFIGURATION             
*Debug 06/08 20:22:45.299 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: RUN INIT                        
*Debug 06/08 20:22:45.299 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:45.299 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:45.299 Test Controller:  PUBLISHING STATE : [ TestController: RUN INIT                        ]
*Debug 06/08 20:22:45.299 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:45.299 Test Controller : ixRunStateHandler received event  TestController: RUN INIT                        
*Debug 06/08 20:22:45.319 Test Controller: Test Controller FSM: ENTRY Action for the State: RUN INIT
*Debug 06/08 20:22:45.319 IxAnalyzer : Analyzer - set test state - 2
*Debug 06/08 20:22:45.319 Test Controller: Memory Trim Timer fired. Trimming working set.
*Debug 06/08 20:22:45.351 Test Controller: Memory Trim complete.
*Debug 06/08 20:22:45.352 Test Controller: Checking free disk space: freeToUser=19145682944; total=243086127104 totalFree=19145682944. StopTest Limit=536870912.0. Warning Limit=1073741824.0.
*Debug 06/08 20:22:45.352 Test Controller: Drive C: has 17.83 GB of free disk space
*Debug 06/08 20:22:45.352 Test Controller : checkLinkStateAllPorts()
*Debug 06/08 20:22:45.352 Network Network1: checkLinkState()
*Debug 06/08 20:22:45.354 Chassis Chain: Updating link states for ports [(1,1,9)]
*Debug 06/08 20:22:45.384 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 06/08 20:22:45.384 Chassis Chain: port 192.168.31.42;1;9 link state = 0
*Debug 06/08 20:22:45.384 Network: ##### Removing port from portList (1,1,9)
*Debug 06/08 20:22:45.384 Chassis Chain: Total wait time for ports to link up = 0.0299999713898, max wait time = 30
*Debug 06/08 20:22:45.384 Network Network1: checkLinkState() returning []
*Debug 06/08 20:22:45.384 Test Controller : checkLinkStateAllPorts() returning []
*Debug 06/08 20:22:45.384 Stat Controller: resetResultGroup()
*Debug 06/08 20:22:45.384 Test Controller : TEST CONTROLLER: setupTimelineControllers()
*Debug 06/08 20:22:45.437 Test Controller : Creating NEW TIMELINE CONTROLLER : Timeline1
*Debug 06/08 20:22:45.437 ixFSM: 
  *** FSM Timeline Timeline1 ENTERING STATE  Timeline Controller: INIT                       
*Debug 06/08 20:22:45.437 Timeline Controller: Timeline Controller FSM: ENTRY Action for the State: INIT
*Debug 06/08 20:22:45.437 Timeline Controller: Timeline Controller Created successfully Timeline1
*Debug 06/08 20:22:45.437 Licensing: Checking out license for test Test1...
*Debug 06/08 20:22:45.443 Traffic Traffic1: agent HTTP requires advancedFeatures: []
*Debug 06/08 20:22:45.444 Traffic Traffic1: agent HTTP requires subscriptionFeatures: []
*Debug 06/08 20:22:45.444 NetTraffic Traffic1@Network1: community Traffic1@Network1 has features: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C165F0>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C165B0>}; featureLicenseCountMap: {}
*Debug 06/08 20:22:45.444 Test: Chassis 192.168.31.42 - test Test1 has features requiring license check: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C165F0>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x27C165B0>}
*Debug 06/08 20:22:45.444 Licensing: There are no counted licenses per port for test Test1!
*Info 06/08 20:22:45.447 Licensing: Checking out license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42'] ...
*Info 06/08 20:22:45.477 Licensing: License check out succeeded for test Test1
*Debug 06/08 20:22:45.493 Test Controller : Creating result folder ...
*Debug 06/08 20:22:45.493 Test Controller : calculateRunResultDirFull(). set run Result full name directory
*Debug 06/08 20:22:45.493 Test Controller : Created result folder = C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http
*Debug 06/08 20:22:45.493 Test Controller : statManager.csvFilePath=C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http
*Debug 06/08 20:22:45.493 Test Controller : statManager.csvFilePath_CreateSubFolder=False
*Debug 06/08 20:22:45.493 Test Controller : statManager.allowUserToChangeCsvPath=False
*Debug 06/08 20:22:45.496 Port Event Viewer: PortEventHandler enabled on [] but disabled on ['']
*Debug 06/08 20:22:45.496 Test Controller : createTestInfoFiles(). Create TestInfo.ini and save repository to runResultDir.
*Debug 06/08 20:22:45.496 Test Controller : IxLoad is logging results for this test in directory: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http
*Debug 06/08 20:22:45.496 Test Controller : Create test info ini file in runResultDir
*Debug 06/08 20:22:45.500 Test Controller :  Save currently running configuration repository in runResultDir
*Debug 06/08 20:22:45.500 Test Controller: Configuring all stat plugins...
*Debug 06/08 20:22:45.502 Test Controller : TEST CONTROLLER: Clearing all Stat Plugins map.
*Debug 06/08 20:22:45.502 Test Controller : clearStatPlugins(): Successfully CLEARED all the statistics plugins.
*Debug 06/08 20:22:45.502 Test Controller : Configuring CSV plugins...
*Debug 06/08 20:22:45.502 Test Controller : Configuring CSV stat view 'Test Client  HTTPClient1 Traffic1@Network1' in community 'Traffic1@Network1'...
*Debug 06/08 20:22:45.502 Test Controller : configCsvPlugin() for the stat-view object
*Debug 06/08 20:22:45.502 Test Controller : Create ixStatApiCsvFilePlugin and add to the list of stat plugins
*Debug 06/08 20:22:45.502 Lib.Stats.ixStatApiCsvFilePlugin: ixStatPlugin: Polling STAT Interval = 2
*Debug 06/08 20:22:45.506 Stat Controller: STAT CONTROLLER: connectToStatSources()
*Debug 06/08 20:22:45.607 Stat Controller: Waiting for all StatEngines to be connected.
*Debug 06/08 20:22:45.707 Stat Controller: All StatEngines connected in 0.1 time
*Debug 06/08 20:22:45.707 Test Controller : Configuring CSV stat view 'HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1' in community 'Traffic1@Network1'...
*Debug 06/08 20:22:45.707 Test Controller : configCsvPlugin() for the stat-view object
*Debug 06/08 20:22:45.707 Test Controller : Create ixStatApiCsvFilePlugin and add to the list of stat plugins
*Debug 06/08 20:22:45.707 Lib.Stats.ixStatApiCsvFilePlugin: ixStatPlugin: Polling STAT Interval = 2
*Debug 06/08 20:22:45.717 Stat Controller: STAT CONTROLLER: connectToStatSources()
*Debug 06/08 20:22:45.717 Test Controller : Configuring CSV stat view 'HTTP Client  HTTPClient1 Traffic1@Network1' in community 'Traffic1@Network1'...
*Debug 06/08 20:22:45.717 Test Controller : configCsvPlugin() for the stat-view object
*Debug 06/08 20:22:45.717 Test Controller : Create ixStatApiCsvFilePlugin and add to the list of stat plugins
*Debug 06/08 20:22:45.717 Lib.Stats.ixStatApiCsvFilePlugin: ixStatPlugin: Polling STAT Interval = 2
*Debug 06/08 20:22:45.726 Stat Controller: STAT CONTROLLER: connectToStatSources()
*Debug 06/08 20:22:45.727 Test Controller : Setting the CSV plugins file path and file name from 'runResultDirFull'...
*Debug 06/08 20:22:45.727 Test Controller : CSV Plugin 'HTTP Client  HTTPClient1 Traffic1@Network1_CSV3' file path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client.csv
*Debug 06/08 20:22:45.729 Test Controller : CSV Plugin 'HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2' file path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client_-_Default_CSV_Logs_HTTPClient1_Traffic1@Network1.csv
*Debug 06/08 20:22:45.729 Test Controller : CSV Plugin 'Test Client  HTTPClient1 Traffic1@Network1_CSV1' file path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\Test_Client.csv
*Debug 06/08 20:22:45.729 Test Controller : Finished configuring CSV plugins.
*Debug 06/08 20:22:45.729 Test Controller : No DCP threshold stat view configured.
*Debug 06/08 20:22:45.730 Test Controller : configStatusIndicatingPlugins() for the Test Controller
*Debug 06/08 20:22:45.730 Community Controller: configStatusIndicatingPlugins() for the Community Controller of Traffic1@Network1
*Debug 06/08 20:22:45.730 Lib.Stats.ixHttpThrottleStatPlugin: ixStatPlugin: Polling STAT Interval = 4
*Debug 06/08 20:22:45.737 Stat Controller: STAT CONTROLLER: connectToStatSources()
*Debug 06/08 20:22:45.739 Test Controller : _configRunStateStatPlugin(): Create ixRunStateStatPlugin and add to the list of stat plugins
*Debug 06/08 20:22:45.739 Lib.Stats.ixRunStateStatPlugin: ixStatPlugin: Polling STAT Interval = 1
*Debug 06/08 20:22:45.747 Stat Controller: STAT CONTROLLER: connectToStatSources()
*Debug 06/08 20:22:45.747 ixRunStateStatPlugin: Initialized the ixRunStateStatPlugin Instance __ixRunStateStatPlugin__0
*Debug 06/08 20:22:45.766 Test Controller : Stat plugin HTTP Client  HTTPClient1 Traffic1@Network1_CSV3 - rate = 183
*Debug 06/08 20:22:45.767 Stat Controller: --- Updated the stats rate statsRate=183
*Debug 06/08 20:22:45.769 Test Controller : Stat plugin HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2 - rate = 186
*Debug 06/08 20:22:45.778 Stat Controller: --- Updated the stats rate statsRate=369
*Debug 06/08 20:22:45.780 Test Controller : Stat plugin Test Client  HTTPClient1 Traffic1@Network1_CSV1 - rate = 21
*Debug 06/08 20:22:45.788 Stat Controller: --- Updated the stats rate statsRate=390
*Debug 06/08 20:22:45.788 Test Controller : Stat plugin HTTP_THROLLE_0 - rate = 0
*Debug 06/08 20:22:45.798 Stat Controller: --- Updated the stats rate statsRate=390
*Debug 06/08 20:22:45.798 Test Controller : Stat plugin __ixRunStateStatPlugin__0 - rate = 4
*Debug 06/08 20:22:45.808 Stat Controller: --- Updated the stats rate statsRate=394
*Debug 06/08 20:22:45.808 Test Controller: Memory Trim Timer fired. Trimming working set.
*Debug 06/08 20:22:45.813 Test Controller: Memory Trim complete.
*Debug 06/08 20:22:45.815 Test Controller: Checking free disk space: freeToUser=19145617408; total=243086127104 totalFree=19145617408. StopTest Limit=536870912.0. Warning Limit=1073741824.0.
*Debug 06/08 20:22:45.815 Test Controller: Drive C: has 17.83 GB of free disk space
*Debug 06/08 20:22:45.815 Test Controller: testName = Test1 ; stateName =  TestController: RUN INIT                        ; eventId =  TestController: All Communities Run Initialized Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:45.852 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: FINAL CONFIGURATION', EVENT RECEIVED:  TestController: Configuration Finalized Successfully
  NEW STATE: 'TestController: RUN INIT', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:45.858 Stat Controller: tsInitTestRun()
*Debug 06/08 20:22:45.858 Stat Controller: setPagingTrafficMap start
*Debug 06/08 20:22:45.858 Stat Controller: publishStatCatalog for Tcl API
*Debug 06/08 20:22:45.858 Stat Controller: __publishStatCatalog()
*Debug 06/08 20:22:45.859 Activity HTTPClient1: getStatCatalog: HTTPClient1
*Debug 06/08 20:22:45.890 Stat Controller: RegisterStatPublisher()
*Debug 06/08 20:22:45.894 Stat Controller: Registering IxServer publisher for aptixia default views
*Debug 06/08 20:22:45.895 Test Server: ##### statManagerAddPorts [(1,1,9)]
*Debug 06/08 20:22:45.895 Test Server: ##### port path 192.168.31.42/Card1/Port9
*Debug 06/08 20:22:45.897 Test Server: AddPorts ['192.168.31.42/Card1/Port9'] to stat manager
*Debug 06/08 20:22:45.897 Test Server: ##### PortList.Add 192.168.31.42/Card1/Port9
*Debug 06/08 20:22:45.897 Test Server: ##### action AddPorts
*Debug 06/08 20:22:46.3 Stat Controller: setPagingTrafficMap for Tcl API
*Debug 06/08 20:22:46.3 Stat Controller: setPagingTrafficMap finish
*Debug 06/08 20:22:46.3 Stat Controller: _resolveAggregated State
*Debug 06/08 20:22:46.10 Stat Controller: Resolving 319 stats ...
*Debug 06/08 20:22:46.10 Stat Controller: number of aggregated stats 319
*Debug 06/08 20:22:46.15 Activity HTTPClient1: getStatCatalog: HTTPClient1
*Debug 06/08 20:22:46.101 Stat Controller: resolvedStatList = 319
*Debug 06/08 20:22:46.105 Stat Controller: --- Updated the stats rate statsRate=553.5
*Debug 06/08 20:22:46.105 Stat Controller: Stats frequency = 2.0 self._statsCount = 319 self._statsRate = 553.5
*Debug 06/08 20:22:46.105 Stat Controller: checkStatsRate()
*Debug 06/08 20:22:46.107 Stat Controller: _userDefinedStatsRate = False
*Debug 06/08 20:22:46.107 Stat Controller: STATS Rate computed for the test is 553.5 ; MAX Stats Rate limit is 55000
*Debug 06/08 20:22:46.107 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:46.107 Test Controller: event ID received =  TestController: All Communities Run Initialized Successfully
*Debug 06/08 20:22:46.107 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Run Initialized Successfully
*Debug 06/08 20:22:46.155 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Run Initialized Successfully
*Debug 06/08 20:22:46.155 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: RUN INIT                        
*Debug 06/08 20:22:46.155 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CLEAR STATS                     
*Debug 06/08 20:22:46.155 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:46.155 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:46.155 Test Controller:  PUBLISHING STATE : [ TestController: CLEAR STATS                     ]
*Debug 06/08 20:22:46.157 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:46.157 Test Controller : ixRunStateHandler received event  TestController: CLEAR STATS                     
*Debug 06/08 20:22:46.176 Test Controller : testClearIxServerStatsAllPorts()
*Info 06/08 20:22:46.176 Chassis Chain: Clearing stats on ports [(1,1,9)]
*Debug 06/08 20:22:46.285 Test Controller: Sending 'Clear Stats' event to All the Community Controllers
*Debug 06/08 20:22:46.286 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:46.289 Community Controller Traffic1@Network1: event ID received =  Community Controller: Clear Stats for the community
*Debug 06/08 20:22:46.290 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Clear Stats for the community
*Debug 06/08 20:22:46.292 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURED  :: Traffic1@Network1 
*Debug 06/08 20:22:46.293 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Clear Stats for the community
*Debug 06/08 20:22:46.296 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURED           
*Debug 06/08 20:22:46.296 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CLEAR STATS          
*Debug 06/08 20:22:46.298 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CLEAR STATS :: Traffic1@Network1 
*Debug 06/08 20:22:46.299 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 06/08 20:22:46.302 ixKseCommunicator Global: Sending on ports [(1,1,9)]:'<ixlagent-clear-statistics-request request-id="1496933501" activityName="Global" port-id="0"/>'.
*Debug 06/08 20:22:46.303 Community Controller: Port Id 192.168.31.42;1;9 timer added.
*Debug 06/08 20:22:46.305 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURED', EVENT RECEIVED:  Community Controller: Clear Stats for the community
  NEW STATE: 'Community Controller: CLEAR STATS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:46.306 Event Scheduler: addEvent() Function. interval = 0, action = <bound method ixTestControllerFSMThread._clearStatsTimerExpired of <ixTestControllerFSMThread(Test Controller, started daemon 6632)>>, actionArguments=(()), iteration=0, startDelay=600 and Timer Index = 2
*Debug 06/08 20:22:46.308 Event Scheduler: EVENT ADDED to the events map. Timer Index=2
*Debug 06/08 20:22:46.308 Test Controller: [ Clear Stats Watch Dog Timer created. ] Timer ID = 2 
*Debug 06/08 20:22:46.309 Test Controller: [ Configured timeout interval = 0 s, start delay = 600 s. ]
*Debug 06/08 20:22:46.332 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: RUN INIT', EVENT RECEIVED:  TestController: All Communities Run Initialized Successfully
  NEW STATE: 'TestController: CLEAR STATS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:46.338 ixKseCommunicator Global: Got from port (1,1,9): '<ixlagent-clear-statistics-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:46.338 ixKseCommunicator Global: Handling ixlagent message from port (1,1,9): '<ixlagent-clear-statistics-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:46.338 Traffic1@Network1: Traffic1@Network1: got response for requestType clear-statistics on port 0
*Debug 06/08 20:22:46.338 Community Controller: Port Id 192.168.31.42;1;9 task done.
*Debug 06/08 20:22:46.407 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:46.407 Community Controller Traffic1@Network1: event ID received =  Community Controller: Global Clear Stats Response Received
*Debug 06/08 20:22:46.407 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Global Clear Stats Response Received
*Debug 06/08 20:22:46.408 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Global Clear Stats Response Received
*Debug 06/08 20:22:46.408 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CLEAR STATS          
*Debug 06/08 20:22:46.408 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:46.410 Community Controller Traffic1@Network1: event ID received =  Community Controller: Activity Cleared Stats
*Debug 06/08 20:22:46.410 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Activity Cleared Stats
*Debug 06/08 20:22:46.410 Community Controller Traffic1@Network1: Activities Cleared Stats for the community: Traffic1@Network1
*Debug 06/08 20:22:46.410 Test Controller: testName = Test1 ; stateName =  TestController: CLEAR STATS                     ; eventId =  Community Controller: Stats Cleared Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:46.411 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Activity Cleared Stats
*Debug 06/08 20:22:46.411 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CLEAR STATS          
*Debug 06/08 20:22:46.433 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:46.433 Test Controller: event ID received =  Community Controller: Stats Cleared Successfully
*Debug 06/08 20:22:46.433 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Stats Cleared Successfully
*Debug 06/08 20:22:46.433 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommStatsCleared()
*Debug 06/08 20:22:46.434 Test Controller: Total number of communities = 1
*Debug 06/08 20:22:46.434 Test Controller: Communities Cleared their Stats so far = 1
*Debug 06/08 20:22:46.434 Test Controller: testName = Test1 ; stateName =  TestController: CLEAR STATS                     ; eventId =  TestController: All Communities Cleared their Stats Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:46.434 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Stats Cleared Successfully
*Debug 06/08 20:22:46.434 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CLEAR STATS                     
*Debug 06/08 20:22:46.434 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:46.434 Test Controller: event ID received =  TestController: All Communities Cleared their Stats Successfully
*Debug 06/08 20:22:46.434 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Cleared their Stats Successfully
*Debug 06/08 20:22:46.460 Test Controller: [ Stopping the Clear Stats Watch Dog Timer. ] Timer ID = 2
*Debug 06/08 20:22:46.460 Event Scheduler: REMOVE Event(). Removing Event Index 2
*Debug 06/08 20:22:46.460 Event Scheduler: Stopping the timer: Event Index 2, timer (1496934166.308, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x281032D0>>, (2,))
*Debug 06/08 20:22:46.461 Event Scheduler: deleting the event 2
*Debug 06/08 20:22:46.483 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Cleared their Stats Successfully
*Debug 06/08 20:22:46.483 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CLEAR STATS                     
*Debug 06/08 20:22:46.483 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: REGISTER STATS                  
*Debug 06/08 20:22:46.483 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:46.483 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:46.483 Test Controller:  PUBLISHING STATE : [ TestController: REGISTER STATS                  ]
*Debug 06/08 20:22:46.483 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:46.483 Test Controller : ixRunStateHandler received event  TestController: REGISTER STATS                  
*Debug 06/08 20:22:46.503 Test Controller: Test Controller FSM: ENTRY Action for the State: REGISTER STATS
*Debug 06/08 20:22:46.503 Test Controller : STARTING the RUN STAT plugin
*Debug 06/08 20:22:46.506 Stat Controller: STAT CONTROLLER: REGISTER THE Plugin with the STAT CONTROLLER : __ixRunStateStatPlugin__0
*Debug 06/08 20:22:46.506 ixRunStateStatPlugin: statPlugin: Scale Factor (when applicable) = 0.008
*Console 06/08 20:22:46.507 : Non-aggregated raw agent stat '192.168.31.42/Card1/Port9/State/HTTPClient1:Run State'
*Debug 06/08 20:22:46.512 Stat Controller: $$$[0] _register: INIT=0.0000,  BUILD_REQ=0.0050, SET=0.0000, REGISTER=0.0000
*Debug 06/08 20:22:46.512 Stat Controller: STAT CONTROLLER: Plugin REGISTERED SUCCESSFULLY with the STAT CONTROLLER : __ixRunStateStatPlugin__0
*Debug 06/08 20:22:46.522 ixStatThread statThread[1]: Adding stat Plugin __ixRunStateStatPlugin__0
*Debug 06/08 20:22:46.522 ixStatPoller __ixRunStateStatPlugin__0: Stat Poller created with maxMissedPolls=300
*Debug 06/08 20:22:46.522 Test Controller: Sending 'Register Stats' event to All the Community Controllers
*Debug 06/08 20:22:46.542 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CLEAR STATS', EVENT RECEIVED:  TestController: All Communities Cleared their Stats Successfully
  NEW STATE: 'TestController: REGISTER STATS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:46.611 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:46.611 Community Controller Traffic1@Network1: event ID received =  Community Controller: Register Stats for the community
*Debug 06/08 20:22:46.611 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Register Stats for the community
*Debug 06/08 20:22:46.611 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CLEAR STATS :: Traffic1@Network1 
*Debug 06/08 20:22:46.611 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Register Stats for the community
*Debug 06/08 20:22:46.612 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CLEAR STATS          
*Debug 06/08 20:22:46.612 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: REGISTER STATS       
*Debug 06/08 20:22:46.612 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: REGISTER STATS :: Traffic1@Network1 
*Debug 06/08 20:22:46.612 Community Controller Traffic1@Network1: Registering and Starting the Statistics Plugin for the community: Traffic1@Network1 
*Debug 06/08 20:22:46.614 Community Controller: startPluginsbyCommunity() communityName = Traffic1@Network1
*Debug 06/08 20:22:46.614 Community Controller: Cleared all plugin-filename mappings, for the community: Traffic1@Network1 
*Debug 06/08 20:22:46.614 Community Controller: Setting the filename path for the plugin: HTTP Client  HTTPClient1 Traffic1@Network1_CSV3 
*Debug 06/08 20:22:46.614 Community Controller: Set the Plugin's successfully; FileName: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client.csv
*Debug 06/08 20:22:46.615 Community Controller: setPluginFileMapping() completed succesfully for the plugin: HTTP Client  HTTPClient1 Traffic1@Network1_CSV3 
*Debug 06/08 20:22:46.615 Community Controller: Setting the filename path for the plugin: HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2 
*Debug 06/08 20:22:46.615 Community Controller: Set the Plugin's successfully; FileName: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client_-_Default_CSV_Logs_HTTPClient1_Traffic1@Network1.csv
*Debug 06/08 20:22:46.615 Community Controller: setPluginFileMapping() completed succesfully for the plugin: HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2 
*Debug 06/08 20:22:46.615 Community Controller: Setting the filename path for the plugin: Test Client  HTTPClient1 Traffic1@Network1_CSV1 
*Debug 06/08 20:22:46.615 Community Controller: Set the Plugin's successfully; FileName: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\Test_Client.csv
*Debug 06/08 20:22:46.615 Community Controller: setPluginFileMapping() completed succesfully for the plugin: Test Client  HTTPClient1 Traffic1@Network1_CSV1 
*Debug 06/08 20:22:46.615 Community Controller: Setting the filename path for the plugin: HTTP_THROLLE_0 
*Debug 06/08 20:22:46.617 Community Controller: Set the Plugin's successfully; FileName: None
*Debug 06/08 20:22:46.617 Community Controller: Plugin Name: HTTP Client  HTTPClient1 Traffic1@Network1_CSV3 ; File path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client.csv 
*Debug 06/08 20:22:46.631 Stat Controller: STAT CONTROLLER: REGISTER THE Plugin with the STAT CONTROLLER : HTTP Client  HTTPClient1 Traffic1@Network1_CSV3
*Debug 06/08 20:22:46.634 ixStatApiCsvFilePlugin: statPlugin: Scale Factor (when applicable) = 0.008
*Debug 06/08 20:22:46.915 Stat Controller: $$$[1] _register: INIT=0.0000,  BUILD_REQ=0.2840, SET=0.0000, REGISTER=0.0000
*Debug 06/08 20:22:46.917 Stat Controller: STAT CONTROLLER: Plugin REGISTERED SUCCESSFULLY with the STAT CONTROLLER : HTTP Client  HTTPClient1 Traffic1@Network1_CSV3
*Debug 06/08 20:22:46.927 ixStatThread statThread[2]: Adding stat Plugin HTTP Client  HTTPClient1 Traffic1@Network1_CSV3
*Debug 06/08 20:22:46.927 ixStatPoller HTTP Client  HTTPClient1 Traffic1@Network1_CSV3: Stat Poller created with maxMissedPolls=150
*Debug 06/08 20:22:46.927 Community Controller: Plugin Started: HTTP Client  HTTPClient1 Traffic1@Network1_CSV3 ;  Timestamp: 0
*Debug 06/08 20:22:46.927 Community Controller: Plugin Name: HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2 ; File path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\HTTP_Client_-_Default_CSV_Logs_HTTPClient1_Traffic1@Network1.csv 
*Debug 06/08 20:22:46.937 Stat Controller: STAT CONTROLLER: REGISTER THE Plugin with the STAT CONTROLLER : HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2
*Debug 06/08 20:22:46.937 ixStatApiCsvFilePlugin: statPlugin: Scale Factor (when applicable) = 0.008
*Console 06/08 20:22:46.937 : Non-aggregated raw agent stat '192.168.31.42/Card1/Port9/State/HTTPClient1:Run State'
*Debug 06/08 20:22:47.203 Stat Controller: $$$[2] _register: INIT=0.0000,  BUILD_REQ=0.2660, SET=0.0000, REGISTER=0.0000
*Debug 06/08 20:22:47.203 Stat Controller: STAT CONTROLLER: Plugin REGISTERED SUCCESSFULLY with the STAT CONTROLLER : HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2
*Debug 06/08 20:22:47.213 ixStatThread statThread[2]: Adding stat Plugin HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2
*Debug 06/08 20:22:47.213 ixStatPoller HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2: Stat Poller created with maxMissedPolls=150
*Debug 06/08 20:22:47.213 Community Controller: Plugin Started: HTTP Client - Default CSV Logs HTTPClient1 Traffic1@Network1_CSV2 ;  Timestamp: 0
*Debug 06/08 20:22:47.213 Community Controller: Plugin Name: Test Client  HTTPClient1 Traffic1@Network1_CSV1 ; File path: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http\Test_Client.csv 
*Debug 06/08 20:22:47.223 Stat Controller: STAT CONTROLLER: REGISTER THE Plugin with the STAT CONTROLLER : Test Client  HTTPClient1 Traffic1@Network1_CSV1
*Debug 06/08 20:22:47.223 ixStatApiCsvFilePlugin: statPlugin: Scale Factor (when applicable) = 0.008
*Debug 06/08 20:22:47.253 Stat Controller: $$$[3] _register: INIT=0.0000,  BUILD_REQ=0.0310, SET=0.0000, REGISTER=0.0000
*Debug 06/08 20:22:47.253 Stat Controller: STAT CONTROLLER: Plugin REGISTERED SUCCESSFULLY with the STAT CONTROLLER : Test Client  HTTPClient1 Traffic1@Network1_CSV1
*Debug 06/08 20:22:47.263 ixStatThread statThread[2]: Adding stat Plugin Test Client  HTTPClient1 Traffic1@Network1_CSV1
*Debug 06/08 20:22:47.263 ixStatPoller Test Client  HTTPClient1 Traffic1@Network1_CSV1: Stat Poller created with maxMissedPolls=150
*Debug 06/08 20:22:47.263 Community Controller: Plugin Started: Test Client  HTTPClient1 Traffic1@Network1_CSV1 ;  Timestamp: 0
*Debug 06/08 20:22:47.273 Stat Controller: STAT CONTROLLER: REGISTER THE Plugin with the STAT CONTROLLER : HTTP_THROLLE_0
*Debug 06/08 20:22:47.273 HTTP Client: statPlugin: Scale Factor (when applicable) = 0.008
*Debug 06/08 20:22:47.276 Stat Controller: $$$[4] _register: INIT=0.0000,  BUILD_REQ=0.0020, SET=0.0000, REGISTER=0.0000
*Debug 06/08 20:22:47.276 Stat Controller: STAT CONTROLLER: Plugin REGISTERED SUCCESSFULLY with the STAT CONTROLLER : HTTP_THROLLE_0
*Debug 06/08 20:22:47.286 ixStatThread statThread[4]: Adding stat Plugin HTTP_THROLLE_0
*Debug 06/08 20:22:47.286 ixStatPoller HTTP_THROLLE_0: Stat Poller created with maxMissedPolls=75
*Debug 06/08 20:22:47.286 Community Controller: Plugin Started: HTTP_THROLLE_0 ;  Timestamp: 0
*Debug 06/08 20:22:47.286 Test Controller: testName = Test1 ; stateName =  TestController: REGISTER STATS                  ; eventId =  Community Controller: Stats Registered Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:47.286 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CLEAR STATS', EVENT RECEIVED:  Community Controller: Register Stats for the community
  NEW STATE: 'Community Controller: REGISTER STATS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:47.286 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:47.286 Community Controller Traffic1@Network1: event ID received =  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.286 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.286 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.286 ixFSM:   *** FSM Community Controller Traffic1@Network1  --DEFAULT EVENT. STAYING IN STATE--:  Community Controller: REGISTER STATS       
*Debug 06/08 20:22:47.342 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:47.342 Test Controller: event ID received =  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.342 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.342 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommStatsCleared()
*Debug 06/08 20:22:47.344 Test Controller: Total number of communities = 1
*Debug 06/08 20:22:47.344 Test Controller: Communities Registered their Stats so far = 1 
*Debug 06/08 20:22:47.344 Test Controller: testName = Test1 ; stateName =  TestController: REGISTER STATS                  ; eventId =  TestController: All Communities Registered their Stats Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:47.344 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Stats Registered Successfully
*Debug 06/08 20:22:47.345 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: REGISTER STATS                  
*Debug 06/08 20:22:47.345 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:47.345 Test Controller: event ID received =  TestController: All Communities Registered their Stats Successfully
*Debug 06/08 20:22:47.345 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Registered their Stats Successfully
*Debug 06/08 20:22:47.407 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Registered their Stats Successfully
*Debug 06/08 20:22:47.407 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: REGISTER STATS                  
*Debug 06/08 20:22:47.407 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: PREPARE RUN                     
*Debug 06/08 20:22:47.407 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:47.407 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:47.407 Test Controller:  PUBLISHING STATE : [ TestController: PREPARE RUN                     ]
*Debug 06/08 20:22:47.407 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:47.407 Test Controller : ixRunStateHandler received event  TestController: PREPARE RUN                     
*Debug 06/08 20:22:47.437 Test Controller: Test Controller FSM: ENTRY Action for the State: PREPARE RUN
*Debug 06/08 20:22:47.437 Test Controller: Sending 'Prepare To Run' event to All the Community Controllers
*Debug 06/08 20:22:47.444 Event Scheduler: addEvent() Function. interval = 0, action = <bound method ixTestControllerFSMThread._prepareRunTimerExpired of <ixTestControllerFSMThread(Test Controller, started daemon 6632)>>, actionArguments=(()), iteration=0, startDelay=600 and Timer Index = 3
*Debug 06/08 20:22:47.444 Event Scheduler: EVENT ADDED to the events map. Timer Index=3
*Debug 06/08 20:22:47.444 Test Controller: [ Prepare Run Watch Dog Timer created. ] Timer ID = 3 
*Debug 06/08 20:22:47.444 Test Controller: [ Configured timeout interval = 0 s, start delay = 600 s. ]
*Debug 06/08 20:22:47.473 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: REGISTER STATS', EVENT RECEIVED:  TestController: All Communities Registered their Stats Successfully
  NEW STATE: 'TestController: PREPARE RUN', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:47.486 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:47.486 Community Controller Traffic1@Network1: event ID received =  Community Controller: Prepare Run for the community
*Debug 06/08 20:22:47.486 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Prepare Run for the community
*Debug 06/08 20:22:47.486 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: REGISTER  STATS  :: Traffic1@Network1 
*Debug 06/08 20:22:47.487 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Prepare Run for the community
*Debug 06/08 20:22:47.487 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: REGISTER STATS       
*Debug 06/08 20:22:47.487 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: PREPARE RUN          
*Debug 06/08 20:22:47.487 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: PREPARE RUN :: Traffic1@Network1 
*Debug 06/08 20:22:47.489 ixKseCommunicator Global: Sending on ports [(1,1,9)]:'<ixlagent-prepare-run-request request-id="1496933501" activityName="Global" port-id="0"/>'.
*Debug 06/08 20:22:47.489 Community Controller: Port Id 192.168.31.42;1;9 timer added.
*Debug 06/08 20:22:47.489 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: REGISTER STATS', EVENT RECEIVED:  Community Controller: Prepare Run for the community
  NEW STATE: 'Community Controller: PREPARE RUN', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:47.542 ixKseCommunicator Global: Got from port (1,1,9): '<ixlagent-prepare-run-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:47.542 ixKseCommunicator Global: Handling ixlagent message from port (1,1,9): '<ixlagent-prepare-run-response request-id="1496933501" activityName="Global" port-id="0"/>'
*Debug 06/08 20:22:47.542 Traffic1@Network1: Traffic1@Network1: got response for requestType prepare-run on port 0
*Debug 06/08 20:22:47.542 Community Controller: Port Id 192.168.31.42;1;9 task done.
*Debug 06/08 20:22:47.589 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 06/08 20:22:47.589 Community Controller Traffic1@Network1: event ID received =  Community Controller: Global Prepare Run Response Received
*Debug 06/08 20:22:47.589 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Global Prepare Run Response Received
*Debug 06/08 20:22:47.591 Test Controller: testName = Test1 ; stateName =  TestController: PREPARE RUN                     ; eventId =  Community Controller: Prepared to Run the community ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:47.591 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: PREPARE RUN :: Traffic1@Network1 
*Debug 06/08 20:22:47.592 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Global Prepare Run Response Received
*Debug 06/08 20:22:47.592 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: PREPARE RUN          
*Debug 06/08 20:22:47.592 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: RUNNING              
*Debug 06/08 20:22:47.592 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: RUNNING  :: Traffic1@Network1 
*Debug 06/08 20:22:47.595 Network Network1: Could not track Tcp Buffer size on eqatec
*Debug 06/08 20:22:47.595 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: PREPARE RUN', EVENT RECEIVED:  Community Controller: Global Prepare Run Response Received
  NEW STATE: 'Community Controller: RUNNING', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:47.674 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:47.674 Test Controller: event ID received =  Community Controller: Prepared to Run the community
*Debug 06/08 20:22:47.674 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Prepared to Run the community
*Debug 06/08 20:22:47.674 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommPreparedRun()
*Debug 06/08 20:22:47.676 Test Controller: Total number of communities = 1
*Debug 06/08 20:22:47.676 Test Controller: Communities Prepared Run so far = 1
*Debug 06/08 20:22:47.676 Test Controller: testName = Test1 ; stateName =  TestController: PREPARE RUN                     ; eventId =  TestController: All Communities Prepared Run ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:47.677 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Prepared to Run the community
*Debug 06/08 20:22:47.677 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: PREPARE RUN                     
*Debug 06/08 20:22:47.677 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:47.677 Test Controller: event ID received =  TestController: All Communities Prepared Run
*Debug 06/08 20:22:47.677 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Prepared Run
*Debug 06/08 20:22:47.711 Test Controller: Test Controller FSM: EXIT Action for the State: PREPARE RUN
*Debug 06/08 20:22:47.713 Test Controller: [ Stopping the Prepare Run Watch Dog Timer. ] Timer ID = 3
*Debug 06/08 20:22:47.713 Event Scheduler: REMOVE Event(). Removing Event Index 3
*Debug 06/08 20:22:47.713 Event Scheduler: Stopping the timer: Event Index 3, timer (1496934167.445, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x281032D0>>, (3,))
*Debug 06/08 20:22:47.713 Event Scheduler: deleting the event 3
*Debug 06/08 20:22:47.974 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Prepared Run
*Debug 06/08 20:22:47.974 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: PREPARE RUN                     
*Debug 06/08 20:22:47.974 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: Activate Port Groups            
*Debug 06/08 20:22:47.974 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:47.974 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:47.976 Test Controller:  PUBLISHING STATE : [ TestController: Activate Port Groups            ]
*Debug 06/08 20:22:47.976 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:47.976 Test Controller : ixRunStateHandler received event  TestController: Activate Port Groups            
*Debug 06/08 20:22:48.0 Test Controller: _testStartIxViewCapture()
*Debug 06/08 20:22:48.0 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 06/08 20:22:48.0 Test Controller: Test Controller FSM: ENTRY Action for the State: ActivatePortGroups
*Debug 06/08 20:22:48.0 Test Controller: Need to activate 1 port groups !
*Debug 06/08 20:22:48.22 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: PREPARE RUN', EVENT RECEIVED:  TestController: All Communities Prepared Run
  NEW STATE: 'TestController: Activate Port Groups', DESCRIPTION: None, DETAILS: None, STATUS: None
*Info 06/08 20:22:48.207 Network: GratARP (GratARP-1) : Activated
*Info 06/08 20:22:48.207 Test Controller : Port Group Activated
*Debug 06/08 20:22:48.209 Test Controller: testName = Test1 ; stateName =  TestController: Activate Port Groups            ; eventId =  TestController: Port Group Activated ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:48.223 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:48.223 Test Controller: event ID received =  TestController: Port Group Activated
*Debug 06/08 20:22:48.223 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Port Group Activated
*Debug 06/08 20:22:48.223 Test Controller: Test Controller FSM: Transition Action: Port Group Activated
*Debug 06/08 20:22:48.223 Test Controller: All PortGroups activated
*Debug 06/08 20:22:48.223 Test Controller: testName = Test1 ; stateName =  TestController: Activate Port Groups            ; eventId =  TestController: All Port Groups Activated ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:48.223 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Port Group Activated
*Debug 06/08 20:22:48.223 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: Activate Port Groups            
*Debug 06/08 20:22:48.223 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:48.224 Test Controller: event ID received =  TestController: All Port Groups Activated
*Debug 06/08 20:22:48.224 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Port Groups Activated
*Debug 06/08 20:22:48.257 Test Controller: Test Controller FSM: EXIT Action for the State: Activate Port Groups
*Debug 06/08 20:22:48.289 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Port Groups Activated
*Debug 06/08 20:22:48.290 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: Activate Port Groups            
*Debug 06/08 20:22:48.290 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: STARTING STAT REQUEST           
*Debug 06/08 20:22:48.290 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:48.290 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:48.290 Test Controller:  PUBLISHING STATE : [ TestController: STARTING STAT REQUEST           ]
*Debug 06/08 20:22:48.292 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:48.292 Test Controller : ixRunStateHandler received event  TestController: STARTING STAT REQUEST           
*Debug 06/08 20:22:48.322 Test Controller: Test Controller FSM: ENTRY Action for the State: STARTING STATS
*Debug 06/08 20:22:48.326 Stat Controller: setStartTime() = 1496933568324
*Debug 06/08 20:22:48.336 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 06/08 20:22:48.336 Stat Controller: Frame Size Distribution Enabled - False
*Debug 06/08 20:22:48.338 Stat Controller: Frame Size Distribution Enabled - False
*Debug 06/08 20:22:48.338 Stat Controller: ixViewsManager is not available
*Debug 06/08 20:22:48.339 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 06/08 20:22:48.339 Stat Controller: Port CPU Statistics view enabled - [(1,1,9)]
*Debug 06/08 20:22:48.341 Stat Controller: L2-3 Stats for Client Ports view enabled - [(1,1,9)]
*Debug 06/08 20:22:48.342 Stat Controller: L2-3 Stats for Server Ports view enabled - []
*Debug 06/08 20:22:48.342 Stat Controller: L2-3 Throughput Stats view enabled - [(1,1,9)]
*Info 06/08 20:22:48.342 Test Controller: Starting the STAT Requests...
*Debug 06/08 20:22:48.352 Stat Controller: STAT CONTROLLER: startRequests()
*Debug 06/08 20:22:48.352 Stat Controller: @ Waiting for all requests to become registered...
*Debug 06/08 20:22:48.352 Stat Controller: *** ZeroTime()->StartTime(): sleep time = 0.473000
*Debug 06/08 20:22:48.828 Stat Controller: @ Waiting for all requests to become active...
*Debug 06/08 20:22:48.927 Stat Controller: @ All requests are active...
*Debug 06/08 20:22:48.927 Stat Controller: Starting stat threads
*Debug 06/08 20:22:48.927 ixStatThread statThread[1]: Starting the stat thread statThread[1]. Polling interval = 1
*Debug 06/08 20:22:48.927 ixStatThread statThread[1]: Starting with 1 plugins
*Debug 06/08 20:22:48.928 ixStatThread statThread[2]: Starting the stat thread statThread[2]. Polling interval = 2
*Debug 06/08 20:22:48.930 ixStatThread statThread[2]: Starting with 3 plugins
*Debug 06/08 20:22:48.930 ixStatThread statThread[4]: Starting the stat thread statThread[4]. Polling interval = 4
*Debug 06/08 20:22:48.931 ixStatThread statThread[4]: Starting with 1 plugins
*Debug 06/08 20:22:48.933 Event Scheduler: addEvent() Function. interval = 0, action = <bound method ixTestControllerFSMThread._testStartEventWatchDogTimerExpired of <ixTestControllerFSMThread(Test Controller, started daemon 6632)>>, actionArguments=(()), iteration=0, startDelay=1200 and Timer Index = 4
*Debug 06/08 20:22:48.934 Event Scheduler: EVENT ADDED to the events map. Timer Index=4
*Debug 06/08 20:22:48.934 Test Controller: [ Stat Request Ready Event Watch Dog Timer created. ] Timer ID = 4 
*Debug 06/08 20:22:48.934 Test Controller: [ Configured timeout interval = 0 s, start delay = 1200 s. ]
*Debug 06/08 20:22:48.934 Test Controller: testName = Test1 ; stateName =  TestController: STARTING STAT REQUEST           ; eventId =  TestController: All Communities have started their Stats Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:48.964 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: Activate Port Groups', EVENT RECEIVED:  TestController: All Port Groups Activated
  NEW STATE: 'TestController: STARTING STAT REQUEST', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:48.971 Stat Controller: tsStartTest()
*Debug 06/08 20:22:48.971 Stat Controller: Stat manager Start starts...
*Debug 06/08 20:22:48.971 Stat Controller: ixViewsManager is not available
*Debug 06/08 20:22:48.971 Stat Controller: getInterfaceViews()
*Debug 06/08 20:22:48.973 Stat Controller: statManagerStartEx()
*Debug 06/08 20:22:48.973 Stat Controller: Stat manager starts for publisher=IxLoad with logResults=True, ignoreAction=False, resetViews=True and resetResultFolder=True ...
*Debug 06/08 20:22:49.36 Stat Controller: Stat manager started for publisher=IxLoad with logResults=True, ignoreAction=False, resetViews=True and resetResultFolder=True
*Debug 06/08 20:22:49.98 Stat Controller: Stat manager Start finishes
*Debug 06/08 20:22:49.98 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:49.99 Test Controller: event ID received =  TestController: All Communities have started their Stats Successfully
*Debug 06/08 20:22:49.99 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities have started their Stats Successfully
*Debug 06/08 20:22:49.99 Test Controller: Test Controller FSM: Internal Transition Action: AllCommStatsStarted()
*Debug 06/08 20:22:49.99 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities have started their Stats Successfully
*Debug 06/08 20:22:49.99 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: STARTING STAT REQUEST           
*Debug 06/08 20:22:49.403 Test Controller : Test Controller: testServerCallback_StatRequestReady() id = -1, publisher = IxLoad, exception = None
*Debug 06/08 20:22:49.403 Test Controller: testName = Test1 ; stateName =  TestController: STARTING STAT REQUEST           ; eventId =  TestController: Received event from the Test Server - Stat Request Ready ; errDescription = None ; details = None; status = None
*Info 06/08 20:22:49.403 Test Controller : The Stat requests are done for publisher IxLoad
*Debug 06/08 20:22:49.500 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:49.500 Test Controller: event ID received =  TestController: Received event from the Test Server - Stat Request Ready
*Debug 06/08 20:22:49.500 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Received event from the Test Server - Stat Request Ready
*Debug 06/08 20:22:49.500 Test Controller: Test Controller FSM: Internal Transition Action: TSrv_StatRequestEventRecv()
*Debug 06/08 20:22:49.500 Test Controller: testName = Test1 ; stateName =  TestController: STARTING STAT REQUEST           ; eventId =  TestController: All stats started and received the event from the test server. Run the test now ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:49.500 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Received event from the Test Server - Stat Request Ready
*Debug 06/08 20:22:49.500 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: STARTING STAT REQUEST           
*Debug 06/08 20:22:49.502 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:49.502 Test Controller: event ID received =  TestController: All stats started and received the event from the test server. Run the test now
*Debug 06/08 20:22:49.502 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All stats started and received the event from the test server. Run the test now
*Debug 06/08 20:22:49.502 Test Controller: << Condition >>  : Timeline type Option = 2
*Debug 06/08 20:22:49.535 Test Controller: Test Controller FSM: EXIT Action for the State: STARTING STATS
*Debug 06/08 20:22:49.535 Test Controller: [ Stopping the Stat Request Ready Event Watch Dog Timer. ] Timer ID = 4
*Debug 06/08 20:22:49.535 Event Scheduler: REMOVE Event(). Removing Event Index 4
*Debug 06/08 20:22:49.535 Event Scheduler: Stopping the timer: Event Index 4, timer (1496934768.934, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x281032D0>>, (4,))
*Debug 06/08 20:22:49.536 Event Scheduler: deleting the event 4
*Debug 06/08 20:22:49.556 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All stats started and received the event from the test server. Run the test now
*Debug 06/08 20:22:49.556 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: STARTING STAT REQUEST           
*Debug 06/08 20:22:49.556 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: STARTING TIMELINES              
*Debug 06/08 20:22:49.558 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:49.558 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:49.558 Test Controller:  PUBLISHING STATE : [ TestController: STARTING TIMELINES              ]
*Debug 06/08 20:22:49.558 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:49.558 Test Controller : ixRunStateHandler received event  TestController: STARTING TIMELINES              
*Debug 06/08 20:22:49.578 Test Controller: Test Controller FSM: ENTRY Action for the State: STARTING TIMELINES
*Debug 06/08 20:22:49.578 Test Controller: Sending 'Start Run' event to all the Timeline Controllers
*Debug 06/08 20:22:49.578 Timeline Controller: Sending event for the timeline controller Timeline1 current state =  Timeline Controller: INIT                       eventId =  Timeline Controller: Start the run description = None details = None status = None
*Debug 06/08 20:22:49.585 Timeline Controller ixThreadFSM: Fetching the next event from the queue
*Debug 06/08 20:22:49.585 Timeline Controller ixThreadFSM: event ID received =  Timeline Controller: Start the run
*Debug 06/08 20:22:49.585 ixFSM:   *** FSM Timeline Timeline1: --EVENT RECEIVED--:  Timeline Controller: Start the run
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline Controller FSM: EXIT Action for the State: INIT :: Timeline1 
*Debug 06/08 20:22:49.585 ixFSM:   *** FSM Timeline Timeline1 --EVENT PROCESSED--:  Timeline Controller: Start the run
*Debug 06/08 20:22:49.585 ixFSM:   *** FSM Timeline Timeline1 --EXITING STATE--:  Timeline Controller: INIT                      
*Debug 06/08 20:22:49.585 ixFSM:   *** FSM Timeline Timeline1 --ENTERING STATE--:  Timeline Controller: PREPARE RUN               
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline Controller FSM: ENTRY Action for the State: Prepare Run :: Timeline1 
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline1 getIterationTime() = 55
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline1 getStandbyTime() = 0
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline1 Created Watch Dog Timer with the timer Run Duration = 674 watch dog timer id = (1496934243.586, 0, <bound method ixTimelineController.watchDogIterationDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline1 Created Async Timer with the timer Run Duration = 360 async timer id = (1496933929.586, 0, <bound method ixTimelineController.asyncCallbackDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.585 Timeline Controller: prepareRun Timeline1
*Debug 06/08 20:22:49.585 Timeline Controller: Timeline1 registerActivityCallback HTTPClient1 - <Lib.TestEnvelope.ixActivity.ixActivity object at 0x279D6290>
*Debug 06/08 20:22:49.586 Timeline Controller: Timeline1 asyncActivityList = [HTTPClient1]
*Debug 06/08 20:22:49.586 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'PrepareRun Request' in state 'Configured'
*Debug 06/08 20:22:49.586 Timeline Controller ixThreadFSM: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Timeline Timeline1, TEST NAME: Test1, PREV STATE: 'Timeline Controller: INIT', EVENT RECEIVED:  Timeline Controller: Start the run
  NEW STATE: 'Timeline Controller: INIT', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:49.586 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'PrepareRun Request' in  state 'Configured'
*Debug 06/08 20:22:49.588 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Configured'
*Debug 06/08 20:22:49.588 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=SendPrepareRunRequest guard=null' in state 'Configured'
*Debug 06/08 20:22:49.588 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,9)]:'<ixlagent-prepare-run-request request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'.
*Debug 06/08 20:22:49.588 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'PrepareRun Request' Result='Handled' in state 'Configured'
*Debug 06/08 20:22:49.588 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Prepare Run Request'
*Debug 06/08 20:22:49.588 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STARTING TIMER-- for state'Prepare Run Request'
*Debug 06/08 20:22:49.589 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Configured' to 'Prepare Run Request' after handling event 'PrepareRun Request'
*Debug 06/08 20:22:49.596 ixKseCommunicator HTTPClient1: Got from port (1,1,9): '<ixlagent-prepare-run-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:22:49.596 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,9): '<ixlagent-prepare-run-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:22:49.598 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'PrepareRun Response' in state 'Prepare Run Request'
*Debug 06/08 20:22:49.598 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'PrepareRun Response' in  state 'Prepare Run Request'
*Debug 06/08 20:22:49.598 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STOPPING TIMER-- for state'Prepare Run Request'
*Debug 06/08 20:22:49.598 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Prepare Run Request'
*Debug 06/08 20:22:49.598 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Prepare Run Request'
*Debug 06/08 20:22:49.599 Timeline Controller: Timeline1 activityCallback from agent HTTPClient1 - error = 
*Debug 06/08 20:22:49.599 Timeline Controller: Timeline1 asyncActivityList = []
*Debug 06/08 20:22:49.599 Timeline Controller: Sending event for the timeline controller Timeline1 current state =  Timeline Controller: PREPARE RUN                eventId =  Timeline Controller: All activities prepared run description = None details = None status = None
*Debug 06/08 20:22:49.599 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'PrepareRun Response' Result='Handled' in state 'Prepare Run Request'
*Debug 06/08 20:22:49.599 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'RunPrepared'
*Debug 06/08 20:22:49.599 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Prepare Run Request' to 'RunPrepared' after handling event 'PrepareRun Response'
*Debug 06/08 20:22:49.601 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: STARTING STAT REQUEST', EVENT RECEIVED:  TestController: All stats started and received the event from the test server. Run the test now
  NEW STATE: 'TestController: STARTING TIMELINES', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:49.687 Timeline Controller ixThreadFSM: Fetching the next event from the queue
*Debug 06/08 20:22:49.687 Timeline Controller ixThreadFSM: event ID received =  Timeline Controller: All activities prepared run
*Debug 06/08 20:22:49.687 ixFSM:   *** FSM Timeline Timeline1: --EVENT RECEIVED--:  Timeline Controller: All activities prepared run
*Debug 06/08 20:22:49.688 Timeline Controller: Timeline Controller FSM: EXIT Action for the State: PREPARE RUN :: Timeline1 
*Debug 06/08 20:22:49.688 Timeline Controller: Timeline1 Clearing the Async Timer timer (1496933929.586, 0, <bound method ixTimelineController.asyncCallbackDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.688 ixFSM:   *** FSM Timeline Timeline1 --EVENT PROCESSED--:  Timeline Controller: All activities prepared run
*Debug 06/08 20:22:49.690 ixFSM:   *** FSM Timeline Timeline1 --EXITING STATE--:  Timeline Controller: PREPARE RUN               
*Debug 06/08 20:22:49.690 ixFSM:   *** FSM Timeline Timeline1 --ENTERING STATE--:  Timeline Controller: START LISTENING           
*Debug 06/08 20:22:49.690 Timeline Controller: Timeline Controller FSM: ENTRY Action for the State: START LISTENING :: Timeline1 
*Debug 06/08 20:22:49.690 Timeline Controller: Timeline1 getIterationTime() = 55
*Debug 06/08 20:22:49.690 Timeline Controller: Timeline1 getStandbyTime() = 0
*Debug 06/08 20:22:49.690 Timeline Controller: Watch Dog Timer already exists for timeline Timeline1! Cancelling timer.
*Debug 06/08 20:22:49.690 Timeline Controller: Timeline1 Clearing the watch dog timer (1496934243.586, 0, <bound method ixTimelineController.watchDogIterationDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.690 Timeline Controller: Timeline1 Created Watch Dog Timer with the timer Run Duration = 674 watch dog timer id = (1496934243.691, 0, <bound method ixTimelineController.watchDogIterationDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.691 Timeline Controller: Timeline1 Created Async Timer with the timer Run Duration = 450 async timer id = (1496934019.692, 0, <bound method ixTimelineController.asyncCallbackDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.691 Timeline Controller: startListening Timeline1
*Debug 06/08 20:22:49.691 Timeline Controller: Timeline1 registerActivityCallback HTTPClient1 - <Lib.TestEnvelope.ixActivity.ixActivity object at 0x279D6290>
*Debug 06/08 20:22:49.693 Timeline Controller: Timeline1 asyncActivityList = [HTTPClient1]
*Debug 06/08 20:22:49.693 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'Start Listening Request' in state 'RunPrepared'
*Debug 06/08 20:22:49.693 Timeline Controller ixThreadFSM: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Timeline Timeline1, TEST NAME: Test1, PREV STATE: 'Timeline Controller: PREPARE RUN', EVENT RECEIVED:  Timeline Controller: All activities prepared run
  NEW STATE: 'Timeline Controller: PREPARE RUN', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:49.693 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'Start Listening Request' in  state 'RunPrepared'
*Debug 06/08 20:22:49.694 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'RunPrepared'
*Debug 06/08 20:22:49.694 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=SendStartListeningRequest guard=null' in state 'RunPrepared'
*Debug 06/08 20:22:49.696 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,9)]:'<ixlagent-start-listening-request request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'.
*Debug 06/08 20:22:49.696 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'Start Listening Request' Result='Handled' in state 'RunPrepared'
*Debug 06/08 20:22:49.697 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Start Listening Request'
*Debug 06/08 20:22:49.697 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STARTING TIMER-- for state'Start Listening Request'
*Debug 06/08 20:22:49.697 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'RunPrepared' to 'Start Listening Request' after handling event 'Start Listening Request'
*Debug 06/08 20:22:49.726 ixKseCommunicator HTTPClient1: Got from port (1,1,9): '<ixlagent-start-listening-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:22:49.726 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,9): '<ixlagent-start-listening-response request-id="1496933503" activityName="HTTPClient1" port-id="0"/>'
*Debug 06/08 20:22:49.727 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT RECEIVED--: 'Start Listening Response' in state 'Start Listening Request'
*Debug 06/08 20:22:49.727 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --PROCESSING EVENT--: 'Start Listening Response' in  state 'Start Listening Request'
*Debug 06/08 20:22:49.729 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STOPPING TIMER-- for state'Start Listening Request'
*Debug 06/08 20:22:49.730 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXITING STATE--:'Start Listening Request'
*Debug 06/08 20:22:49.730 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Start Listening Request'
*Debug 06/08 20:22:49.730 Timeline Controller: Timeline1 activityCallback from agent HTTPClient1 - error = 
*Debug 06/08 20:22:49.730 Timeline Controller: Timeline1 asyncActivityList = []
*Debug 06/08 20:22:49.730 Timeline Controller: Sending event for the timeline controller Timeline1 current state =  Timeline Controller: START LISTENING            eventId =  Timeline Controller: All activities started listening description = None details = None status = None
*Debug 06/08 20:22:49.730 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --EVENT PROCESSED--: 'Start Listening Response' Result='Handled' in state 'Start Listening Request'
*Debug 06/08 20:22:49.730 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --ENTERING STATE--:'Listening'
*Debug 06/08 20:22:49.732 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_2' --STATE CHANGED-- from 'Start Listening Request' to 'Listening' after handling event 'Start Listening Response'
*Debug 06/08 20:22:49.795 Timeline Controller ixThreadFSM: Fetching the next event from the queue
*Debug 06/08 20:22:49.795 Timeline Controller ixThreadFSM: event ID received =  Timeline Controller: All activities started listening
*Debug 06/08 20:22:49.795 ixFSM:   *** FSM Timeline Timeline1: --EVENT RECEIVED--:  Timeline Controller: All activities started listening
*Debug 06/08 20:22:49.795 Timeline Controller: Timeline Controller FSM: EXIT Action for the State: START LISTENING :: Timeline1 
*Debug 06/08 20:22:49.796 Timeline Controller: Timeline1 Clearing the Async Timer timer (1496934019.692, 0, <bound method ixTimelineController.asyncCallbackDurationExpired of <Lib.TestController.ixTimelineController.ixTimelineController object at 0x27BFC830>>, ())
*Debug 06/08 20:22:49.796 Test Controller: testName = Test1 ; stateName =  TestController: STARTING TIMELINES              ; eventId =  TestController: Timeline Started Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:49.796 ixFSM:   *** FSM Timeline Timeline1 --EVENT PROCESSED--:  Timeline Controller: All activities started listening
*Debug 06/08 20:22:49.796 ixFSM:   *** FSM Timeline Timeline1 --EXITING STATE--:  Timeline Controller: START LISTENING           
*Debug 06/08 20:22:49.796 ixFSM:   *** FSM Timeline Timeline1 --ENTERING STATE--:  Timeline Controller: STANDBY                   
*Debug 06/08 20:22:49.796 Timeline Controller: Timeline Controller FSM: ENTRY Action for the State: STANDBY :: Timeline1 
*Debug 06/08 20:22:49.796 Timeline Controller: Timeline1 getStandbyTime() = 0
*Debug 06/08 20:22:49.798 Timeline Controller ixThreadFSM: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Timeline Timeline1, TEST NAME: Test1, PREV STATE: 'Timeline Controller: START LISTENING', EVENT RECEIVED:  Timeline Controller: All activities started listening
  NEW STATE: 'Timeline Controller: START LISTENING', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 06/08 20:22:49.801 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:49.801 Test Controller: event ID received =  TestController: Timeline Started Successfully
*Debug 06/08 20:22:49.801 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Timeline Started Successfully
*Debug 06/08 20:22:49.801 Test Controller: Test Controller FSM: Internal Transition Action: _TransAction_CheckAllTimelinesStarted()
*Debug 06/08 20:22:49.802 Test Controller: Total number of timelines = 1
*Debug 06/08 20:22:49.802 Test Controller: Timelines started so far = 1
*Debug 06/08 20:22:49.802 Test Controller: testName = Test1 ; stateName =  TestController: STARTING TIMELINES              ; eventId =  TestController: All Timelines Started Successfully ; errDescription = None ; details = None; status = None
*Debug 06/08 20:22:49.802 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Timeline Started Successfully
*Debug 06/08 20:22:49.802 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: STARTING TIMELINES              
*Debug 06/08 20:22:49.802 Test Controller: Fetching the next event from the queue
*Debug 06/08 20:22:49.802 Test Controller: event ID received =  TestController: All Timelines Started Successfully
*Debug 06/08 20:22:49.802 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Timelines Started Successfully
*Debug 06/08 20:22:49.872 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Timelines Started Successfully
*Debug 06/08 20:22:49.872 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: STARTING TIMELINES              
*Debug 06/08 20:22:49.874 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: RUNNING                         
*Debug 06/08 20:22:49.874 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:49.874 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 06/08 20:22:49.874 Test Controller:  PUBLISHING STATE : [ TestController: RUNNING                         ]
*Debug 06/08 20:22:49.874 Test Controller: **********************************************************************************************
*Debug 06/08 20:22:49.875 Test Controller : ixRunStateHandler received event  TestController: RUNNING                         
*Debug 06/08 20:22:49.910 Test Controller: Test Controller FSM: ENTRY Action for the State: RUNNING
*Info 06/08 20:22:49.910 Test Controller: Test is Running.
*Debug 06/08 20:22:49.917 Test Controller : Creating the Test.XMD file...
*Debug 06/08 20:22:49.954 Test Controller : Successfully created the Test.XMD file and saved to the folder: C:\xampp\htdocs\VNFXchange\RESULTS\sample_ixload_final_http 

################################################################################
## 06/08/2017 20:22:49: Log Rotate
################################################################################

